{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Components/lessons/item.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { List, Card, Avatar } from \"react-native-paper\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { COLORS, SIZES } from \"../../Helpers/constants\";\nimport * as Animatable from \"react-native-animatable\";\nimport { localhost } from \"../../Helpers/urls\";\nimport UnitItem from \"../unit/item\";\nimport UnitList from \"../unit/list\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useTheme } from \"react-native-paper\";\n\nvar LessonItem = function LessonItem(_ref) {\n  var LessonItem = _ref.LessonItem;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showUnit = _useState2[0],\n      setShowUnit = _useState2[1];\n\n  var LeftContent = function LeftContent(props) {\n    return React.createElement(Avatar.Icon, _extends({}, props, {\n      icon: \"lead-pencil\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 32\n      }\n    }));\n  };\n\n  var Completed = function Completed(props) {\n    return React.createElement(View, {\n      style: {\n        width: 30,\n        height: 30,\n        borderRadius: 30 / 2,\n        backgroundColor: colors.primary,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginRight: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      name: \"check\",\n      style: {\n        color: COLORS.white,\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  var NotCompleted = function NotCompleted(props) {\n    return React.createElement(View, {\n      style: {\n        width: 30,\n        height: 30,\n        borderRadius: 30 / 2,\n        backgroundColor: COLORS.enactive,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginRight: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      name: \"check\",\n      style: {\n        color: COLORS.white,\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return React.createElement(Animatable.View, {\n    animation: \"flipInX\",\n    style: {\n      margin: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Lesson Details\", {\n        id: LessonItem.id\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, LessonItem.lessonCompleted ? React.createElement(Card.Title, {\n    title: LessonItem.title,\n    subtitle: LessonItem.subtitle,\n    right: Completed,\n    left: LeftContent,\n    titleStyle: {\n      fontSize: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }) : React.createElement(Card.Title, {\n    title: LessonItem.title,\n    subtitle: LessonItem.subtitle,\n    right: NotCompleted,\n    left: LeftContent,\n    titleStyle: {\n      fontSize: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default LessonItem;","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Components/lessons/item.js"],"names":["React","useState","useEffect","axios","List","Card","Avatar","MaterialCommunityIcons","COLORS","SIZES","Animatable","localhost","UnitItem","UnitList","useNavigation","useTheme","LessonItem","colors","navigation","showUnit","setShowUnit","LeftContent","props","Completed","width","height","borderRadius","backgroundColor","primary","justifyContent","alignItems","marginRight","color","white","fontSize","NotCompleted","enactive","margin","navigate","id","lessonCompleted","title","subtitle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { View, FlatList, TouchableOpacity, Text } from \"react-native\";\nimport { List, Card, Avatar } from \"react-native-paper\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport { COLORS, SIZES } from \"../../Helpers/constants\";\nimport * as Animatable from \"react-native-animatable\";\n\nimport { localhost } from \"../../Helpers/urls\";\nimport UnitItem from \"../unit/item\";\nimport UnitList from \"../unit/list\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useTheme } from \"react-native-paper\";\n\nconst LessonItem = ({ LessonItem }) => {\n  const { colors } = useTheme();\n\n  // console.log(LessonItem);\n  const navigation = useNavigation();\n  const [showUnit, setShowUnit] = useState(false);\n  //   const handleShowUnits = () => setShowUnit(!showUnit);\n  const LeftContent = props => <Avatar.Icon {...props} icon=\"lead-pencil\" />;\n\n  const Completed = props => (\n    <View\n      style={{\n        width: 30,\n        height: 30,\n        borderRadius: 30 / 2,\n        backgroundColor: colors.primary,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginRight: 10\n      }}\n    >\n      <MaterialCommunityIcons\n        name=\"check\"\n        style={{\n          color: COLORS.white,\n          fontSize: 20\n        }}\n      />\n    </View>\n  );\n\n  const NotCompleted = props => (\n    <View\n      style={{\n        width: 30,\n        height: 30,\n        borderRadius: 30 / 2,\n        backgroundColor: COLORS.enactive,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginRight: 10\n      }}\n    >\n      <MaterialCommunityIcons\n        name=\"check\"\n        style={{\n          color: COLORS.white,\n          fontSize: 20\n        }}\n      />\n    </View>\n  );\n\n  return (\n    <Animatable.View animation=\"flipInX\" style={{ margin: 5 }}>\n      <Card>\n        <TouchableOpacity\n          onPress={() =>\n            navigation.navigate(\"Lesson Details\", { id: LessonItem.id })\n          }\n        >\n          {LessonItem.lessonCompleted ? (\n            <Card.Title\n              title={LessonItem.title}\n              subtitle={LessonItem.subtitle}\n              right={Completed}\n              left={LeftContent}\n              titleStyle={{ fontSize: 15 }}\n            />\n          ) : (\n            <Card.Title\n              title={LessonItem.title}\n              subtitle={LessonItem.subtitle}\n              right={NotCompleted}\n              left={LeftContent}\n              titleStyle={{ fontSize: 15 }}\n            />\n          )}\n        </TouchableOpacity>\n      </Card>\n    </Animatable.View>\n  );\n};\nexport default LessonItem;\n"]},"metadata":{},"sourceType":"module"}