{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Screens/SignUpScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport BackGround from \"../Components/Utils/BackGround\";\nimport Logo from \"../Components/Utils/Logo\";\nimport Header from \"../Components/Utils/Header\";\nimport Button from \"../Components/Utils/Button\";\nimport TextInput from \"../Components/Utils/TextInput\";\nimport BackButton from \"../Components/Utils/BackButton\";\nimport { useTheme } from \"react-native-paper\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { emailValidator, passwordValidator, usernameValidator } from \"../Components/Utils/Utilities\";\nimport * as actions from \"../store/actions/auth\";\n\nvar LoginScreen = function LoginScreen(props) {\n  var navigation = useNavigation();\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _useState = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password1 = _useState6[0],\n      setPassword1 = _useState6[1];\n\n  var _useState7 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password2 = _useState8[0],\n      setPassword2 = _useState8[1];\n\n  useEffect(function () {\n    if (props.token) {\n      (function () {\n        return navigation.navigate(\"Home\");\n      });\n    }\n  }, []);\n\n  var _onSignUpPressed = function _onSignUpPressed() {\n    var emailError = emailValidator(email.value);\n    var usernameError = usernameValidator(username.value);\n    var password1Error = passwordValidator(password1.value);\n    var password2Error = passwordValidator(password2.value);\n\n    if (usernameError || emailError || password1Error || password2Error) {\n      setUsername(_objectSpread(_objectSpread({}, username), {}, {\n        error: usernameError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword1(_objectSpread(_objectSpread({}, password1), {}, {\n        error: password1Error\n      }));\n      setPassword2(_objectSpread(_objectSpread({}, password2), {}, {\n        error: password2Error\n      }));\n    } else {\n      props.authSignup(username.value, email.value, password1.value, password2.value);\n      setTimeout(function () {\n        navigation.navigate(\"Home\");\n      }, 2000);\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Welcome to Lakaters\"), React.createElement(TextInput, {\n    label: \"User Name\",\n    returnKeyType: \"next\",\n    value: username.value,\n    onChangeText: function onChangeText(text) {\n      return setUsername({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!username.error,\n    errorText: username.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"username\",\n    textContentType: \"username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"next\",\n    value: password1.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword1({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!password1.error,\n    errorText: password1.error,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Confirm Password\",\n    returnKeyType: \"done\",\n    value: password2.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword2({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!password2.error,\n    errorText: password2.error,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: _onSignUpPressed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, \"Sign up\"), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Login\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, \"Login\"));\n};\n\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: \"100%\",\n    alignItems: \"flex-end\",\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    width: \"100%\",\n    maxWidth: 340,\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    authSignup: function authSignup(username, password1, password2, is_student) {\n      return dispatch(actions.authSignup(username, password1, password2, is_student));\n    },\n    logOut: function logOut() {\n      return dispatch(actions.logout());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginScreen);","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Screens/SignUpScreen.js"],"names":["React","memo","useState","useEffect","connect","BackGround","Logo","Header","Button","TextInput","BackButton","useTheme","useNavigation","emailValidator","passwordValidator","usernameValidator","actions","LoginScreen","props","navigation","colors","value","error","username","setUsername","email","setEmail","password1","setPassword1","password2","setPassword2","token","navigate","_onSignUpPressed","emailError","usernameError","password1Error","password2Error","authSignup","setTimeout","styles","container","text","StyleSheet","create","forgotPassword","width","alignItems","marginBottom","row","flexDirection","marginTop","flex","padding","maxWidth","alignSelf","justifyContent","mapStateToProps","state","auth","loading","mapDispatchToProps","dispatch","is_student","logOut","logout"],"mappings":"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","sourcesContent":["import React, { memo, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { TouchableOpacity, StyleSheet, Text, View } from \"react-native\";\nimport BackGround from \"../Components/Utils/BackGround\";\nimport Logo from \"../Components/Utils/Logo\";\nimport Header from \"../Components/Utils/Header\";\nimport Button from \"../Components/Utils/Button\";\nimport TextInput from \"../Components/Utils/TextInput\";\nimport BackButton from \"../Components/Utils/BackButton\";\nimport { useTheme } from \"react-native-paper\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport {\n  emailValidator,\n  passwordValidator,\n  usernameValidator\n} from \"../Components/Utils/Utilities\";\n\nimport * as actions from \"../store/actions/auth\";\n\nconst LoginScreen = props => {\n  // console.log(props.token);\n  const navigation = useNavigation();\n\n  const { colors } = useTheme();\n\n  const [username, setUsername] = useState({ value: \"\", error: \"\" });\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\n  const [password1, setPassword1] = useState({ value: \"\", error: \"\" });\n  const [password2, setPassword2] = useState({ value: \"\", error: \"\" });\n\n  useEffect(() => {\n    if (props.token) {\n      () => navigation.navigate(\"Home\");\n    }\n  }, []);\n\n  const _onSignUpPressed = () => {\n    const emailError = emailValidator(email.value);\n    const usernameError = usernameValidator(username.value);\n    const password1Error = passwordValidator(password1.value);\n    const password2Error = passwordValidator(password2.value);\n\n    // if (emailError || passwordError) {\n    //   setEmail({ ...email, error: emailError });\n    //   setPassword({ ...password, error: passwordError });\n    //   alert(\"error\");\n    //   // return;\n    // } else {\n    //   alert(\"no error\");\n    //   props.onAuth(username, password);\n    // }\n\n    if (usernameError || emailError || password1Error || password2Error) {\n      setUsername({ ...username, error: usernameError });\n      setEmail({ ...email, error: emailError });\n      setPassword1({ ...password1, error: password1Error });\n      setPassword2({ ...password2, error: password2Error });\n      // alert(\"error\");\n      // return;\n    } else {\n      // alert(\"no error\");\n      // console.log();\n      // const is_student = false;\n      // console.log(password1.value);\n      props.authSignup(\n        username.value,\n        email.value,\n        password1.value,\n        password2.value\n        // is_student\n      );\n\n      setTimeout(() => {\n        navigation.navigate(\"Home\");\n      }, 2000);\n    }\n  };\n\n  return (\n    // <BackGround>\n    <View style={styles.container}>\n      {/* <BackButton goBack={() => navigation.navigate(\"Home\")} /> */}\n      {/* <Logo /> */}\n      <Header>Welcome to Lakaters</Header>\n\n      <TextInput\n        label=\"User Name\"\n        returnKeyType=\"next\"\n        value={username.value}\n        onChangeText={text => setUsername({ value: text, error: \"\" })}\n        error={!!username.error}\n        errorText={username.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"username\"\n        textContentType=\"username\"\n        // keyboardType=\"username\"\n      />\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={text => setEmail({ value: text, error: \"\" })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"next\"\n        value={password1.value}\n        onChangeText={text => setPassword1({ value: text, error: \"\" })}\n        error={!!password1.error}\n        errorText={password1.error}\n        secureTextEntry\n      />\n      <TextInput\n        label=\"Confirm Password\"\n        returnKeyType=\"done\"\n        value={password2.value}\n        onChangeText={text => setPassword2({ value: text, error: \"\" })}\n        error={!!password2.error}\n        errorText={password2.error}\n        secureTextEntry\n      />\n      {/* <View style={styles.forgotPassword}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"ForgotPasswordScreen\")}\n        >\n          <Text style={{ color: colors.primary }}>Forgot your password?</Text>\n        </TouchableOpacity>\n      </View> */}\n      {/* <View>\n        <View>\n          <View> */}\n      <Button mode=\"contained\" onPress={_onSignUpPressed}>\n        Sign up\n      </Button>\n\n      <Button mode=\"outlined\" onPress={() => navigation.navigate(\"Login\")}>\n        Login\n      </Button>\n      {/* </View>\n        </View>\n      </View> */}\n      {/* <View style={styles.row}>\n        <Text style={{ color: colors.primary }}>Don’t have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.navigate(\"RegisterScreen\")}>\n          <Text style={{ color: colors.primary }}>Sign up</Text>\n        </TouchableOpacity>\n      </View> */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: \"100%\",\n    alignItems: \"flex-end\",\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    width: \"100%\",\n    maxWidth: 340,\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n  // label: {\n  //   color: colors.secondary\n  // },\n  // link: {\n  //   fontWeight: \"bold\",\n  //   color: colors.primary\n  // }\n});\n\n// export default memo(LoginScreen);\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authSignup: (username, password1, password2, is_student) =>\n      dispatch(actions.authSignup(username, password1, password2, is_student)),\n    logOut: () => dispatch(actions.logout())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginScreen);\n"]},"metadata":{},"sourceType":"module"}