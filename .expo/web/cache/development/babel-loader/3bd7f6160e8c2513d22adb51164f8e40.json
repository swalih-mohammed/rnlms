{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Components/unit/detail.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { List, Card, Avatar } from \"react-native-paper\";\nimport { localhost } from \"../../Helpers/urls\";\nimport UnitTestList from \"../unitTest/list\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport * as Animatable from \"react-native-animatable\";\nimport LessonItem from \"../lessons/item\";\n\nvar UnitDetail = function UnitDetail(props) {\n  var navigation = useNavigation();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      unitTest = _useState2[0],\n      setUnitTest = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      unit = _useState4[0],\n      setUnit = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  useEffect(function () {\n    getUnitDetail();\n  }, []);\n  var id = props.route.params.id;\n\n  var getUnitDetail = function getUnitDetail() {\n    var unitId, username, response;\n    return _regeneratorRuntime.async(function getUnitDetail$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            unitId = id;\n            username = props.username;\n\n            if (!(username !== null && unitId !== null)) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.prev = 3;\n            setLoading(true);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(axios.get(localhost + \"/courses/units/\" + unitId + \"/\" + username));\n\n          case 7:\n            response = _context.sent;\n            setUnit(response.data[0]);\n            setLoading(false);\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](3);\n            setError(_context.t0);\n            console.log(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 12]], Promise);\n  };\n\n  var LeftContent = function LeftContent(props) {\n    return React.createElement(Avatar.Icon, _extends({}, props, {\n      icon: \"school\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 32\n      }\n    }));\n  };\n\n  if (!unit) {\n    return null;\n  }\n\n  return React.createElement(React.Fragment, null, loading ? React.createElement(ActivityIndicator, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }) : React.createElement(React.Fragment, null, React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(Card.Title, {\n    title: unit.title,\n    subtitle: unit.subtitle,\n    left: LeftContent,\n    titleStyle: {\n      fontSize: 18,\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }))), unit.lessons ? React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: unit.lessons,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(LessonItem, {\n        LessonItem: item,\n        unitId: unit.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 26\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  })) : null));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0\n  },\n  item: {\n    backgroundColor: \"#f9c2ff\",\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n    username: state.auth.username\n  };\n};\n\nexport default connect(mapStateToProps, null)(UnitDetail);","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Components/unit/detail.js"],"names":["React","useState","useEffect","axios","connect","List","Card","Avatar","localhost","UnitTestList","useNavigation","Animatable","LessonItem","UnitDetail","props","navigation","unitTest","setUnitTest","unit","setUnit","error","setError","loading","setLoading","getUnitDetail","id","route","params","unitId","username","get","response","data","console","log","LeftContent","flex","justifyContent","title","subtitle","fontSize","fontWeight","lessons","styles","container","item","toString","StyleSheet","create","marginTop","StatusBar","currentHeight","backgroundColor","padding","marginVertical","marginHorizontal","mapStateToProps","state","token","auth"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;;;;;;AAaA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,oBAAnC;AACA,SAASC,SAAT;AACA,OAAOC,YAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAO,KAAKC,UAAZ,MAA4B,yBAA5B;AAEA,OAAOC,UAAP;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAE1B,MAAMC,UAAU,GAAGL,aAAa,EAAhC;;AAEA,kBAAgCT,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOe,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwBhB,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOiB,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA0BlB,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOmB,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA8BpB,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOqB,OAAP;AAAA,MAAgBC,UAAhB;;AAEArB,EAAAA,SAAS,CAAC,YAAM;AACdsB,IAAAA,aAAa;AAEd,GAHQ,EAGN,EAHM,CAAT;AAIA,MAAQC,EAAR,GAAeX,KAAK,CAACY,KAAN,CAAYC,MAA3B,CAAQF,EAAR;;AAEA,MAAMD,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACdI,YAAAA,MADc,GACLH,EADK;AAEdI,YAAAA,QAFc,GAEHf,KAAK,CAACe,QAFH;;AAAA,kBAGhBA,QAAQ,KAAK,IAAb,IAAqBD,MAAM,KAAK,IAHhB;AAAA;AAAA;AAAA;;AAAA;AAKhBL,YAAAA,UAAU,CAAC,IAAD,CAAV;AALgB;AAAA,6CAMOpB,KAAK,CAAC2B,GAAN,CAGlBtB,SAHkB,uBAGSoB,MAHT,SAGmBC,QAHnB,CANP;;AAAA;AAMVE,YAAAA,QANU;AAWhBZ,YAAAA,OAAO,CAACY,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAD,CAAP;AACAT,YAAAA,UAAU,CAAC,KAAD,CAAV;AAZgB;AAAA;;AAAA;AAAA;AAAA;AAchBF,YAAAA,QAAQ,aAAR;AACAY,YAAAA,OAAO,CAACC,GAAR;;AAfgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAoBA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAArB,KAAK;AAAA,WAAI,oBAAC,MAAD,CAAQ,IAAR,eAAiBA,KAAjB;AAAwB,MAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;AAAA,GAAzB;;AAEA,MAAI,CAACI,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AACD,SACE,0CACGI,OAAO,GACN,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAE;AAAEc,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE;AAA3B,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,0CACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,KAAK,EAAEnB,IAAI,CAACoB,KADd;AAEE,IAAA,QAAQ,EAAEpB,IAAI,CAACqB,QAFjB;AAGE,IAAA,IAAI,EAAEJ,WAHR;AAIE,IAAA,UAAU,EAAE;AAAEK,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,UAAU,EAAE;AAA5B,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF,EAaGvB,IAAI,CAACwB,OAAL,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE1B,IAAI,CAACwB,OADb;AAEE,IAAA,YAAY,EAAE,sBAAAG,IAAI;AAAA,aAAIA,IAAI,CAACpB,EAAL,CAAQqB,QAAR,EAAJ;AAAA,KAFpB;AAIE,IAAA,UAAU,EAAE,0BAAc;AAAA,UAAXD,IAAW,QAAXA,IAAW;AACxB,aAAO,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAEA,IAAxB;AAA8B,QAAA,MAAM,EAAE3B,IAAI,CAACO,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAWG,IAxBN,CAJJ,CADF;AAkCD,CA1ED;;AA2EA,IAAMkB,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTR,IAAAA,IAAI,EAAE,CADG;AAETa,IAAAA,SAAS,EAAEC,SAAS,CAACC,aAAV,IAA2B;AAF7B,GADoB;AAK/BN,EAAAA,IAAI,EAAE;AACJO,IAAAA,eAAe,EAAE,SADb;AAEJC,IAAAA,OAAO,EAAE,EAFL;AAGJC,IAAAA,cAAc,EAAE,CAHZ;AAIJC,IAAAA,gBAAgB,EAAE;AAJd,GALyB;AAW/BjB,EAAAA,KAAK,EAAE;AACLE,IAAAA,QAAQ,EAAE;AADL;AAXwB,CAAlB,CAAf;;AAgBA,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACE,IAAN,CAAWD,KADb;AAIL7B,IAAAA,QAAQ,EAAE4B,KAAK,CAACE,IAAN,CAAW9B;AAJhB,GAAP;AAMD,CAPD;;AASA,eAAezB,OAAO,CACpBoD,eADoB,EAEpB,IAFoB,CAAP,CAGb3C,UAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n\n// import { View, TouchableOpacity, Text } from \"react-native\";\nimport {\n  SafeAreaView,\n  TouchableOpacity,\n  ActivityIndicator,\n  FlatList,\n  StyleSheet,\n  StatusBar,\n  View,\n  Text\n} from \"react-native\";\nimport { List, Card, Avatar } from \"react-native-paper\";\nimport { localhost } from \"../../Helpers/urls\";\nimport UnitTestList from \"../unitTest/list\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport * as Animatable from \"react-native-animatable\";\n\nimport LessonItem from \"../lessons/item\";\n\nconst UnitDetail = props => {\n  // const { username } = props.username;\n  const navigation = useNavigation();\n\n  const [unitTest, setUnitTest] = useState(null);\n  const [unit, setUnit] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    getUnitDetail();\n    // console.log(id);\n  }, []);\n  const { id } = props.route.params;\n\n  const getUnitDetail = async () => {\n    const unitId = id;\n    const username = props.username;\n    if (username !== null && unitId !== null) {\n      try {\n        setLoading(true);\n        const response = await axios.get(\n          // `${localhost}/courses/units/${unitId}`\n\n          `${localhost}/courses/units/${unitId}/${username}`\n        );\n        setUnit(response.data[0]);\n        setLoading(false);\n      } catch (err) {\n        setError(err);\n        console.log(err);\n      }\n    }\n  };\n\n  const LeftContent = props => <Avatar.Icon {...props} icon=\"school\" />;\n\n  if (!unit) {\n    return null;\n  }\n  return (\n    <>\n      {loading ? (\n        <ActivityIndicator style={{ flex: 1, justifyContent: \"center\" }} />\n      ) : (\n        <>\n          <Card>\n            <TouchableOpacity\n            // onPress={() => navigation.navigate(\"VidoePlayerScreen\")}\n            >\n              <Card.Title\n                title={unit.title}\n                subtitle={unit.subtitle}\n                left={LeftContent}\n                titleStyle={{ fontSize: 18, fontWeight: \"bold\" }}\n              />\n            </TouchableOpacity>\n          </Card>\n          {unit.lessons ? (\n            <View style={styles.container}>\n              <FlatList\n                data={unit.lessons}\n                keyExtractor={item => item.id.toString()}\n                // renderItem={renderItem}\n                renderItem={({ item }) => {\n                  return <LessonItem LessonItem={item} unitId={unit.id} />;\n                }}\n              />\n            </View>\n          ) : null}\n        </>\n      )}\n    </>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0\n  },\n  item: {\n    backgroundColor: \"#f9c2ff\",\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  }\n});\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    // currentAssignment: state.assignments.currentAssignment,\n    // loading: state.assignments.loading,\n    username: state.auth.username\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UnitDetail);\n"]},"metadata":{},"sourceType":"module"}