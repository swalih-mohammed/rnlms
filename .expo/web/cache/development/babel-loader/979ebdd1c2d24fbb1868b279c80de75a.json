{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Screens/LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport BackGround from \"../Components/Utils/BackGround\";\nimport Logo from \"../Components/Utils/Logo\";\nimport Header from \"../Components/Utils/Header\";\nimport Button from \"../Components/Utils/Button\";\nimport TextInput from \"../Components/Utils/TextInput\";\nimport BackButton from \"../Components/Utils/BackButton\";\nimport { useTheme } from \"react-native-paper\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { emailValidator, passwordValidator, usernameValidator } from \"../Components/Utils/Utilities\";\nimport * as actions from \"../store/actions/auth\";\n\nvar LoginScreen = function LoginScreen(props) {\n  var navigation = useNavigation();\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _useState = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _onLoginPressed = function _onLoginPressed() {\n    var usernameError = usernameValidator(username.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (usernameError || passwordError) {\n      setUsername(_objectSpread(_objectSpread({}, username), {}, {\n        error: usernameError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n    } else {\n      props.onAuth(username.value, password.value);\n      navigation.navigate(\"Home\");\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, !props.token ? React.createElement(React.Fragment, null, React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Welcome back.\"), React.createElement(TextInput, {\n    label: \"User Name\",\n    returnKeyType: \"next\",\n    value: username.value,\n    onChangeText: function onChangeText(text) {\n      return setUsername({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!username.error,\n    errorText: username.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"username\",\n    textContentType: \"username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.forgotPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"ForgotPasswordScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: colors.primary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Forgot your password?\"))), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: _onLoginPressed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Login\"), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: function onPress() {\n      return navigation.navigate(\"SignUp\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"Sign Up\")) : React.createElement(Button, {\n    mode: \"contained\",\n    onPress: props.logOut,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, \"Log out\"));\n};\n\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: \"100%\",\n    alignItems: \"flex-end\",\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    width: \"100%\",\n    maxWidth: 340,\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAuth: function onAuth(username, password) {\n      return dispatch(actions.authLogin(username, password));\n    },\n    logOut: function logOut() {\n      return dispatch(actions.logout());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginScreen);","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Screens/LoginScreen.js"],"names":["React","memo","useState","connect","BackGround","Logo","Header","Button","TextInput","BackButton","useTheme","useNavigation","emailValidator","passwordValidator","usernameValidator","actions","LoginScreen","props","navigation","colors","value","error","username","setUsername","password","setPassword","_onLoginPressed","usernameError","passwordError","onAuth","navigate","styles","container","token","text","forgotPassword","color","primary","logOut","StyleSheet","create","width","alignItems","marginBottom","row","flexDirection","marginTop","flex","padding","maxWidth","alignSelf","justifyContent","mapStateToProps","state","auth","loading","mapDispatchToProps","dispatch","authLogin","logout"],"mappings":"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","sourcesContent":["import React, { memo, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { TouchableOpacity, StyleSheet, Text, View } from \"react-native\";\nimport BackGround from \"../Components/Utils/BackGround\";\nimport Logo from \"../Components/Utils/Logo\";\nimport Header from \"../Components/Utils/Header\";\nimport Button from \"../Components/Utils/Button\";\nimport TextInput from \"../Components/Utils/TextInput\";\nimport BackButton from \"../Components/Utils/BackButton\";\nimport { useTheme } from \"react-native-paper\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport {\n  emailValidator,\n  passwordValidator,\n  usernameValidator\n} from \"../Components/Utils/Utilities\";\n\nimport * as actions from \"../store/actions/auth\";\n\nconst LoginScreen = props => {\n  // console.log(props.token);\n  const navigation = useNavigation();\n\n  const { colors } = useTheme();\n  // const [email, setEmail] = useState({ value: \"\", error: \"\" });\n  const [username, setUsername] = useState({ value: \"\", error: \"\" });\n  const [password, setPassword] = useState({ value: \"\", error: \"\" });\n\n  const _onLoginPressed = () => {\n    // const emailError = emailValidator(email.value);\n    const usernameError = usernameValidator(username.value);\n    const passwordError = passwordValidator(password.value);\n\n    // if (emailError || passwordError) {\n    //   setEmail({ ...email, error: emailError });\n    //   setPassword({ ...password, error: passwordError });\n    //   alert(\"error\");\n    //   // return;\n    // } else {\n    //   alert(\"no error\");\n    //   props.onAuth(username, password);\n    // }\n\n    if (usernameError || passwordError) {\n      // if (emailError || passwordError) {\n      // setEmail({ ...email, error: emailError });\n      setUsername({ ...username, error: usernameError });\n      setPassword({ ...password, error: passwordError });\n      // alert(\"error\");\n      // return;\n    } else {\n      // alert(\"no error\");\n      // console.log(username, password);\n      props.onAuth(username.value, password.value);\n      // props.onAuth(email.value, password.value);\n\n      navigation.navigate(\"Home\");\n    }\n  };\n\n  return (\n    // <BackGround>\n    <View style={styles.container}>\n      {!props.token ? (\n        <>\n          {/* <BackButton goBack={() => navigation.navigate(\"Home\")} /> */}\n          {/* <Logo /> */}\n          <Header>Welcome back.</Header>\n          {/* <TextInput\n            label=\"Email\"\n            returnKeyType=\"next\"\n            value={email.value}\n            onChangeText={text => setEmail({ value: text, error: \"\" })}\n            error={!!email.error}\n            errorText={email.error}\n            autoCapitalize=\"none\"\n            autoCompleteType=\"email\"\n            textContentType=\"emailAddress\"\n            keyboardType=\"email-address\"\n          /> */}\n          <TextInput\n            label=\"User Name\"\n            returnKeyType=\"next\"\n            value={username.value}\n            onChangeText={text => setUsername({ value: text, error: \"\" })}\n            error={!!username.error}\n            errorText={username.error}\n            autoCapitalize=\"none\"\n            autoCompleteType=\"username\"\n            textContentType=\"username\"\n            // keyboardType=\"username\"\n          />\n          <TextInput\n            label=\"Password\"\n            returnKeyType=\"done\"\n            value={password.value}\n            onChangeText={text => setPassword({ value: text, error: \"\" })}\n            error={!!password.error}\n            errorText={password.error}\n            secureTextEntry\n          />\n          <View style={styles.forgotPassword}>\n            <TouchableOpacity\n              onPress={() => navigation.navigate(\"ForgotPasswordScreen\")}\n            >\n              <Text style={{ color: colors.primary }}>\n                Forgot your password?\n              </Text>\n            </TouchableOpacity>\n          </View>\n          <Button mode=\"contained\" onPress={_onLoginPressed}>\n            Login\n          </Button>\n          <Button mode=\"outlined\" onPress={() => navigation.navigate(\"SignUp\")}>\n            Sign Up\n          </Button>\n          {/* <View style={styles.row}>\n            <Text style={{ color: colors.primary }}>\n              Don’t have an account?{\" \"}\n            </Text>\n            <TouchableOpacity\n              onPress={() => navigation.navigate(\"RegisterScreen\")}\n            >\n              <Text style={{ color: colors.primary }}>Sign up</Text>\n            </TouchableOpacity>\n          </View> */}\n        </>\n      ) : (\n        // <View style={styles.row}>\n        //   <Text style={{ color: colors.primary }}>Don’t have an account? </Text>\n        //   <TouchableOpacity\n        //     onPress={() => navigation.navigate(\"RegisterScreen\")}\n        //   >\n        //     <Text style={{ color: colors.primary }}>Log Out</Text>\n        //   </TouchableOpacity>\n        // </View>\n        <Button mode=\"contained\" onPress={props.logOut}>\n          Log out\n        </Button>\n        // <LottieView\n        //   source={require(\"../../assets/lotties/success.json\")}\n        //   autoPlay\n        //   loop\n        // />\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: \"100%\",\n    alignItems: \"flex-end\",\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    width: \"100%\",\n    maxWidth: 340,\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n  // label: {\n  //   color: colors.secondary\n  // },\n  // link: {\n  //   fontWeight: \"bold\",\n  //   color: colors.primary\n  // }\n});\n\n// export default memo(LoginScreen);\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) =>\n      dispatch(actions.authLogin(username, password)),\n    logOut: () => dispatch(actions.logout())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginScreen);\n"]},"metadata":{},"sourceType":"module"}