{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Screens/TestScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { memo, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Header from \"../Components/Utils/Header\";\nimport Button from \"../Components/Utils/Button\";\nimport axios from \"axios\";\nimport { localhost } from \"../Helpers/urls\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nvar Test = function Test() {\n  var navigation = useNavigation();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      courses = _useState2[0],\n      setCourses = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  useEffect(function () {\n    getCourses();\n  }, []);\n\n  var getCourses = function getCourses() {\n    var response;\n    return _regeneratorRuntime.async(function getCourses$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(localhost + \"/courses\"));\n\n          case 4:\n            response = _context.sent;\n            setCourses(response.data);\n            setLoading(false);\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            setError(_context.t0);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, courses == null ? void 0 : courses.length), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Login\", {\n        id: 1\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Login\"));\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Screens/TestScreen.js"],"names":["React","memo","useState","useEffect","connect","Header","Button","axios","localhost","useNavigation","Test","navigation","courses","setCourses","error","setError","loading","setLoading","getCourses","get","response","data","console","log","length","navigate","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT;AACA,SAASC,aAAT,QAA8B,0BAA9B;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMC,UAAU,GAAGF,aAAa,EAAhC;;AAEA,kBAA8BP,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA0BX,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOY,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA8Bb,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOc,OAAP;AAAA,MAAgBC,UAAhB;;AACAd,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,UAAU;AAEX,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAMA,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfD,YAAAA,UAAU,CAAC,IAAD,CAAV;AAFe;AAAA,6CAGQV,KAAK,CAACY,GAAN,CAAaX,SAAb,cAHR;;AAAA;AAGTY,YAAAA,QAHS;AAIfP,YAAAA,UAAU,CAACO,QAAQ,CAACC,IAAV,CAAV;AAEAJ,YAAAA,UAAU,CAAC,KAAD,CAAV;AANe;AAAA;;AAAA;AAAA;AAAA;AAQfF,YAAAA,QAAQ,aAAR;AACAO,YAAAA,OAAO,CAACC,GAAR;;AATe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAYA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASX,OAAT,oBAASA,OAAO,CAAEY,MAAlB,CADF,EAEE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMb,UAAU,CAACc,QAAX,CAAoB,OAApB,EAA6B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA7B,CAAN;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF;AAWD,CAlCD;;AAoCA,eAAehB,IAAf","sourcesContent":["import React, { memo, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { TouchableOpacity, StyleSheet, Text, View } from \"react-native\";\nimport Header from \"../Components/Utils/Header\";\nimport Button from \"../Components/Utils/Button\";\nimport axios from \"axios\";\nimport { localhost } from \"../Helpers/urls\";\nimport { useNavigation } from \"@react-navigation/native\";\n\n// import { courseListURL } from \"../../Helpers/urls\";\n\nconst Test = () => {\n  const navigation = useNavigation();\n\n  const [courses, setCourses] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    getCourses();\n    // apiCall();\n  }, []);\n\n  const getCourses = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${localhost}/courses`);\n      setCourses(response.data);\n      // console.log(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError(err);\n      console.log(err);\n    }\n  };\n  return (\n    <View>\n      <Header>{courses?.length}</Header>\n      <Button\n        mode=\"contained\"\n        onPress={() => navigation.navigate(\"Login\", { id: 1 })}\n      >\n        Login\n      </Button>\n    </View>\n  );\n};\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}