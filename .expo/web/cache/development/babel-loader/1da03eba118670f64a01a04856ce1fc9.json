{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nvar initialState = {\n  token: null,\n  username: null,\n  is_student: null,\n  is_teacher: null,\n  userId: null,\n  error: null,\n  loading: false\n};\n\nvar authStart = function authStart(state, action) {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nvar authSuccess = function authSuccess(state, action) {\n  return updateObject(state, {\n    token: action.user.token,\n    username: action.user.username,\n    is_student: action.user.is_student,\n    is_teacher: action.user.is_teacher,\n    userId: action.user.userId,\n    error: null,\n    loading: false\n  });\n};\n\nvar authFail = function authFail(state, action) {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nvar authLogout = function authLogout(state, action) {\n  return updateObject(state, {\n    token: null,\n    username: null,\n    is_student: null,\n    is_teacher: null,\n    userId: null,\n    error: null,\n    loading: false\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/store/reducers/auth.js"],"names":["actionTypes","updateObject","initialState","token","username","is_student","is_teacher","userId","error","loading","authStart","state","action","authSuccess","user","authFail","authLogout","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ;AACA,SAASC,YAAT;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,QAAQ,EAAE,IAFS;AAGnBC,EAAAA,UAAU,EAAE,IAHO;AAInBC,EAAAA,UAAU,EAAE,IAJO;AAKnBC,EAAAA,MAAM,EAAE,IALW;AAMnBC,EAAAA,KAAK,EAAE,IANY;AAOnBC,EAAAA,OAAO,EAAE;AAPU,CAArB;;AAUA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACnC,SAAOX,YAAY,CAACU,KAAD,EAAQ;AACzBH,IAAAA,KAAK,EAAE,IADkB;AAEzBC,IAAAA,OAAO,EAAE;AAFgB,GAAR,CAAnB;AAID,CALD;;AAOA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACF,KAAD,EAAQC,MAAR,EAAmB;AACrC,SAAOX,YAAY,CAACU,KAAD,EAAQ;AACzBR,IAAAA,KAAK,EAAES,MAAM,CAACE,IAAP,CAAYX,KADM;AAEzBC,IAAAA,QAAQ,EAAEQ,MAAM,CAACE,IAAP,CAAYV,QAFG;AAGzBC,IAAAA,UAAU,EAAEO,MAAM,CAACE,IAAP,CAAYT,UAHC;AAIzBC,IAAAA,UAAU,EAAEM,MAAM,CAACE,IAAP,CAAYR,UAJC;AAKzBC,IAAAA,MAAM,EAAEK,MAAM,CAACE,IAAP,CAAYP,MALK;AAMzBC,IAAAA,KAAK,EAAE,IANkB;AAOzBC,IAAAA,OAAO,EAAE;AAPgB,GAAR,CAAnB;AASD,CAVD;;AAYA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,CAACJ,KAAD,EAAQC,MAAR,EAAmB;AAClC,SAAOX,YAAY,CAACU,KAAD,EAAQ;AACzBH,IAAAA,KAAK,EAAEI,MAAM,CAACJ,KADW;AAEzBC,IAAAA,OAAO,EAAE;AAFgB,GAAR,CAAnB;AAID,CALD;;AAOA,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAACL,KAAD,EAAQC,MAAR,EAAmB;AACpC,SAAOX,YAAY,CAACU,KAAD,EAAQ;AACzBR,IAAAA,KAAK,EAAE,IADkB;AAEzBC,IAAAA,QAAQ,EAAE,IAFe;AAGzBC,IAAAA,UAAU,EAAE,IAHa;AAIzBC,IAAAA,UAAU,EAAE,IAJa;AAKzBC,IAAAA,MAAM,EAAE,IALiB;AAMzBC,IAAAA,KAAK,EAAE,IANkB;AAOzBC,IAAAA,OAAO,EAAE;AAPgB,GAAR,CAAnB;AASD,CAVD;;AAYA,IAAMQ,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCN,KAAiC,uEAAzBT,YAAyB;AAAA,MAAXU,MAAW;;AAChD,UAAQA,MAAM,CAACM,IAAf;AACE,SAAKlB,WAAW,CAACmB,UAAjB;AACE,aAAOT,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAhB;;AACF,SAAKZ,WAAW,CAACoB,YAAjB;AACE,aAAOP,WAAW,CAACF,KAAD,EAAQC,MAAR,CAAlB;;AACF,SAAKZ,WAAW,CAACqB,SAAjB;AACE,aAAON,QAAQ,CAACJ,KAAD,EAAQC,MAAR,CAAf;;AACF,SAAKZ,WAAW,CAACsB,WAAjB;AACE,aAAON,UAAU,CAACL,KAAD,EAAQC,MAAR,CAAjB;;AACF;AACE,aAAOD,KAAP;AAVJ;AAYD,CAbD;;AAeA,eAAeM,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  token: null,\n  username: null,\n  is_student: null,\n  is_teacher: null,\n  userId: null,\n  error: null,\n  loading: false\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.user.token,\n    username: action.user.username,\n    is_student: action.user.is_student,\n    is_teacher: action.user.is_teacher,\n    userId: action.user.userId,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    username: null,\n    is_student: null,\n    is_teacher: null,\n    userId: null,\n    error: null,\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}