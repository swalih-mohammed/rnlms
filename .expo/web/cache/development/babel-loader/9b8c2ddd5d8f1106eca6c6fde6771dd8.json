{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Screens/AccountScreen.js\";\n\nimport React, { memo, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Header from \"../Components/Utils/Header\";\nimport Button from \"../Components/Utils/Button\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport * as actions from \"../store/actions/auth\";\n\nvar Account = function Account(props) {\n  var navigation = useNavigation();\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, props.token ? React.createElement(React.Fragment, null, React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"My Account\"), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: props.logOut,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"Log out\")) : React.createElement(React.Fragment, null, React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"You have logged out\"), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Login\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Login\")));\n};\n\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: \"100%\",\n    alignItems: \"flex-end\",\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    width: \"100%\",\n    maxWidth: 340,\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    token: state.auth.token\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    logOut: function logOut() {\n      return dispatch(actions.logout());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Account);","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Screens/AccountScreen.js"],"names":["React","memo","useState","useEffect","connect","Header","Button","useNavigation","actions","Account","props","navigation","styles","container","token","logOut","navigate","StyleSheet","create","forgotPassword","width","alignItems","marginBottom","row","flexDirection","marginTop","flex","padding","maxWidth","alignSelf","justifyContent","mapStateToProps","state","auth","mapDispatchToProps","dispatch","logout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAO,KAAKC,OAAZ;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACvB,MAAMC,UAAU,GAAGJ,aAAa,EAAhC;AAQA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,KAAN,GACC,0CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,WAAb;AAAyB,IAAA,OAAO,EAAEJ,KAAK,CAACK,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADD,GAQC,0CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,WAAb;AAAyB,IAAA,OAAO,EAAE;AAAA,aAAMJ,UAAU,CAACK,QAAX,CAAoB,OAApB,CAAN;AAAA,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CATJ,CADF;AAmBD,CA5BD;;AA8BA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,KAAK,EAAE,MADO;AAEdC,IAAAA,UAAU,EAAE,UAFE;AAGdC,IAAAA,YAAY,EAAE;AAHA,GADe;AAM/BC,EAAAA,GAAG,EAAE;AACHC,IAAAA,aAAa,EAAE,KADZ;AAEHC,IAAAA,SAAS,EAAE;AAFR,GAN0B;AAU/BZ,EAAAA,SAAS,EAAE;AACTa,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,OAAO,EAAE,EAFA;AAGTP,IAAAA,KAAK,EAAE,MAHE;AAITQ,IAAAA,QAAQ,EAAE,GAJD;AAKTC,IAAAA,SAAS,EAAE,QALF;AAMTR,IAAAA,UAAU,EAAE,QANH;AAOTS,IAAAA,cAAc,EAAE;AAPP;AAVoB,CAAlB,CAAf;;AA4BA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLlB,IAAAA,KAAK,EAAEkB,KAAK,CAACC,IAAN,CAAWnB;AADb,GAAP;AAGD,CAJD;;AAMA,IAAMoB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLpB,IAAAA,MAAM,EAAE;AAAA,aAAMoB,QAAQ,CAAC3B,OAAO,CAAC4B,MAAR,EAAD,CAAd;AAAA;AADH,GAAP;AAGD,CAJD;;AAMA,eAAehC,OAAO,CACpB2B,eADoB,EAEpBG,kBAFoB,CAAP,CAGbzB,OAHa,CAAf","sourcesContent":["import React, { memo, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { TouchableOpacity, StyleSheet, Text, View } from \"react-native\";\nimport Header from \"../Components/Utils/Header\";\nimport Button from \"../Components/Utils/Button\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport * as actions from \"../store/actions/auth\";\n\nconst Account = props => {\n  const navigation = useNavigation();\n\n  //   useEffect(() => {\n  //     if (!props.token) {\n  //       () => navigation.navigate(\"Login\");\n  //     }\n  //   }, []);\n\n  return (\n    <View style={styles.container}>\n      {props.token ? (\n        <>\n          <Header>My Account</Header>\n          <Button mode=\"contained\" onPress={props.logOut}>\n            Log out\n          </Button>\n        </>\n      ) : (\n        <>\n          <Header>You have logged out</Header>\n          <Button mode=\"contained\" onPress={() => navigation.navigate(\"Login\")}>\n            Login\n          </Button>\n        </>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: \"100%\",\n    alignItems: \"flex-end\",\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    width: \"100%\",\n    maxWidth: 340,\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n  // label: {\n  //   color: colors.secondary\n  // },\n  // link: {\n  //   fontWeight: \"bold\",\n  //   color: colors.primary\n  // }\n});\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logOut: () => dispatch(actions.logout())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Account);\n"]},"metadata":{},"sourceType":"module"}