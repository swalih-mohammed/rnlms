{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport { localhost } from \"../../Helpers/urls\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport var authStart = function authStart() {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport var authSuccess = function authSuccess(user) {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    user: user\n  };\n};\nexport var authFail = function authFail(error) {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport var logout = function logout() {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport var checkAuthTimeout = function checkAuthTimeout(expirationTime) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport var authLogin = function authLogin(username, password) {\n  return function (dispatch) {\n    dispatch(authStart());\n    axios.post(localhost + \"/rest-auth/login/\", {\n      username: username,\n      password: password\n    }).then(function (res) {\n      var user = {\n        token: res.data.key,\n        userId: res.data.user,\n        username: res.data.user_type.username,\n        is_student: res.data.user_type.is_student,\n        is_teacher: res.data.user_type.is_teacher,\n        expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n      };\n      dispatch(authSuccess(user));\n    }).catch(function (err) {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport var authSignup = function authSignup(username, email, password1, password2, is_student) {\n  return function (dispatch) {\n    dispatch(authStart());\n    var user = {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2,\n      is_student: true,\n      is_teacher: false\n    };\n    axios.post(localhost + \"/rest-auth/registration/\", user).then(function (res) {\n      var user = {\n        token: res.data.key,\n        username: username,\n        userId: res.data.user,\n        is_student: is_student,\n        is_teacher: !is_student,\n        expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n      };\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch(authSuccess(user));\n    }).catch(function (err) {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport var authCheckState = function authCheckState() {\n  return function (dispatch) {\n    var user = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (user === undefined || user === null) {\n      dispatch(logout());\n    } else {\n      var expirationDate = new Date(user.expirationDate);\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(user));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/store/actions/auth.js"],"names":["axios","actionTypes","localhost","AsyncStorage","authStart","type","AUTH_START","authSuccess","user","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","username","password","post","then","res","token","data","key","userId","user_type","is_student","is_teacher","expirationDate","Date","getTime","catch","err","authSignup","email","password1","password2","localStorage","setItem","JSON","stringify","authCheckState","parse","getItem","undefined"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport { localhost } from \"../../Helpers/urls\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = user => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    user\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  // localStorage.removeItem(\"user\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  // export const authLogin = (email, password) => {\n  // console.log(email, password);\n  // console.log(\"firing\");\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(`${localhost}/rest-auth/login/`, {\n        // email: email,\n        username: username,\n        password: password\n      })\n      .then(res => {\n        // console.log(res);\n        const user = {\n          token: res.data.key,\n          // username,\n          userId: res.data.user,\n          username: res.data.user_type.username,\n          is_student: res.data.user_type.is_student,\n          is_teacher: res.data.user_type.is_teacher,\n          expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n        };\n        // localStorage.setItem(\"user\", JSON.stringify(user));\n        // AsyncStorage.setItem(\"user\", JSON.stringify(user));\n        // saveUserToStorage(user);\n        dispatch(authSuccess(user));\n        // dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (\n  username,\n  email,\n  password1,\n  password2,\n  is_student\n) => {\n  return dispatch => {\n    dispatch(authStart());\n    const user = {\n      username,\n      email,\n      password1,\n      password2,\n      is_student: true,\n      is_teacher: false\n    };\n    axios\n      .post(`${localhost}/rest-auth/registration/`, user)\n      .then(res => {\n        const user = {\n          token: res.data.key,\n          username,\n          userId: res.data.user,\n          is_student,\n          is_teacher: !is_student,\n          expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n        };\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        dispatch(authSuccess(user));\n        // dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user === undefined || user === null) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(user.expirationDate);\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(user));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}