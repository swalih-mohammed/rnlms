{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Components/quiz/Questions.js\";\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createASNT as _createASNT } from \"../../store/actions/assignments\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AudioPlayerWiouthControl from \"../../Helpers/PlayerWithoutControl\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { COLORS, SIZES } from \"../../Helpers/constants\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport ScoreModal from \"./model\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nvar Quiz = function Quiz(props) {\n  var navigation = useNavigation();\n  var questions = props.questions,\n      testID = props.testID,\n      token = props.token,\n      username = props.username,\n      lessonId = props.lessonId,\n      unitId = props.unitId;\n  var allQuestions = questions;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentQuestionIndex = _useState2[0],\n      setCurrentQuestionIndex = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentOptionSelected = _useState4[0],\n      setCurrentOptionSelected = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      correctOption = _useState6[0],\n      setCorrectOption = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isOptionsDisabled = _useState8[0],\n      setIsOptionsDisabled = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      score = _useState10[0],\n      setScore = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      passed = _useState12[0],\n      setPassed = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showNextButton = _useState14[0],\n      setShowNextButton = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showScoreModal = _useState16[0],\n      setShowScoreModal = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      error = _useState18[0],\n      setError = _useState18[1];\n\n  var validateAnswer = function validateAnswer(selectedOption) {\n    setCurrentOptionSelected(selectedOption);\n    setIsOptionsDisabled(true);\n\n    if (selectedOption.is_correct_choice) {\n      setScore(score + 1);\n      setCorrectOption(selectedOption.id);\n    }\n\n    setShowNextButton(true);\n  };\n\n  var handleSubmitTest = function handleSubmitTest() {\n    setShowScoreModal(true);\n\n    try {\n      var data = {\n        username: username,\n        lessonId: lessonId,\n        score: score\n      };\n      props.createASNT(token, data);\n      navigation.navigate(\"Unit Details\", {\n        id: unitId\n      });\n    } catch (err) {\n      setError(err);\n      console.log(err);\n    }\n  };\n\n  var handleNext = function handleNext() {\n    if (currentQuestionIndex == allQuestions.length - 1) {\n      setShowScoreModal(true);\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setCurrentOptionSelected(null);\n      setCorrectOption(null);\n      setIsOptionsDisabled(false);\n      setShowNextButton(false);\n    }\n\n    Animated.timing(progress, {\n      toValue: currentQuestionIndex + 1,\n      duration: 1000,\n      useNativeDriver: false\n    }).start();\n  };\n\n  var restartQuiz = function restartQuiz() {\n    setShowScoreModal(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setCurrentOptionSelected(null);\n    setCorrectOption(null);\n    setIsOptionsDisabled(false);\n    setShowNextButton(false);\n    Animated.timing(progress, {\n      toValue: 0,\n      duration: 1000,\n      useNativeDriver: false\n    }).start();\n  };\n\n  var renderQuestion = function renderQuestion() {\n    var _allQuestions$current;\n\n    return React.createElement(View, {\n      style: {\n        marginVertical: 40\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: COLORS.white,\n        fontSize: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, (_allQuestions$current = allQuestions[currentQuestionIndex]) == null ? void 0 : _allQuestions$current.question));\n  };\n\n  var renderOptions = function renderOptions() {\n    var _allQuestions$current2;\n\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, allQuestions[currentQuestionIndex].has_photo_choices ? React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        flexWrap: \"wrap\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, allQuestions[currentQuestionIndex].photo_choices.map(function (option) {\n      return React.createElement(TouchableOpacity, {\n        key: option.id,\n        onPress: function onPress() {\n          return validateAnswer(option);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }\n      }, React.createElement(Image, {\n        style: styles.option_photo,\n        source: {\n          uri: option.photo\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }));\n    })) : React.createElement(React.Fragment, null, (_allQuestions$current2 = allQuestions[currentQuestionIndex]) == null ? void 0 : _allQuestions$current2.text_choices.map(function (option) {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return validateAnswer(option);\n        },\n        disabled: isOptionsDisabled,\n        key: option.id,\n        style: {\n          borderWidth: 3,\n          borderColor: option.id == correctOption ? COLORS.success : option.id == currentOptionSelected ? COLORS.error : COLORS.secondary + \"40\",\n          backgroundColor: option == correctOption ? COLORS.success + \"20\" : option == currentOptionSelected ? COLORS.error + \"20\" : COLORS.secondary + \"20\",\n          height: 60,\n          borderRadius: 20,\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          paddingHorizontal: 20,\n          marginVertical: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 13,\n          color: COLORS.white\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }\n      }, option.title), option.id == correctOption ? React.createElement(View, {\n        style: {\n          width: 30,\n          height: 30,\n          borderRadius: 30 / 2,\n          backgroundColor: COLORS.success,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 19\n        }\n      }, React.createElement(MaterialCommunityIcons, {\n        name: \"check\",\n        style: {\n          color: COLORS.white,\n          fontSize: 20\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }\n      })) : option.id == currentOptionSelected ? React.createElement(View, {\n        style: {\n          width: 30,\n          height: 30,\n          borderRadius: 30 / 2,\n          backgroundColor: COLORS.error,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 19\n        }\n      }, React.createElement(MaterialCommunityIcons, {\n        name: \"close\",\n        style: {\n          color: COLORS.white,\n          fontSize: 20\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }\n      })) : null);\n    })));\n  };\n\n  var renderNextButton = function renderNextButton() {\n    if (showNextButton) {\n      return React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n        onPress: handleNext,\n        style: {\n          marginTop: 20,\n          width: \"100%\",\n          backgroundColor: COLORS.accent,\n          padding: 20,\n          borderRadius: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          color: COLORS.white,\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }\n      }, \"Next\")));\n    } else {\n      return null;\n    }\n  };\n\n  var _useState19 = useState(new Animated.Value(0)),\n      _useState20 = _slicedToArray(_useState19, 2),\n      progress = _useState20[0],\n      setProgress = _useState20[1];\n\n  var progressAnim = progress.interpolate({\n    inputRange: [0, allQuestions.length],\n    outputRange: [\"0%\", \"100%\"]\n  });\n\n  var renderProgressBar = function renderProgressBar() {\n    return React.createElement(View, {\n      style: {\n        width: \"100%\",\n        height: 1,\n        borderRadius: 5,\n        backgroundColor: \"#00000020\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 7\n      }\n    }, React.createElement(Animated.View, {\n      style: [{\n        height: 1,\n        borderRadius: 5,\n        backgroundColor: COLORS.accent\n      }, {\n        width: progressAnim\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingVertical: 40,\n      paddingHorizontal: 16,\n      backgroundColor: COLORS.background,\n      position: \"relative\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }\n  }, renderProgressBar()), React.createElement(View, {\n    style: {\n      flex: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }\n  }, renderQuestion()), React.createElement(View, {\n    style: {\n      flex: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }\n  }, renderOptions()), React.createElement(View, {\n    style: {\n      flex: 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }\n  }, renderNextButton()), allQuestions[currentQuestionIndex].has_audio ? React.createElement(AudioPlayerWiouthControl, {\n    mp3: allQuestions[currentQuestionIndex].audio,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 11\n    }\n  }) : null, showScoreModal ? React.createElement(ScoreModal, {\n    qlength: allQuestions.length,\n    score: score,\n    showScoreModal: showScoreModal,\n    handleSubmitTest: handleSubmitTest,\n    restartQuiz: restartQuiz,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 11\n    }\n  }) : null));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n    username: state.auth.username\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createASNT: function createASNT(token, asnt) {\n      return dispatch(_createASNT(token, asnt));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  TopContainer: {\n    flex: 6\n  },\n  BottomContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  ImgWrapper: {\n    width: 90,\n    height: 40\n  },\n  option_photo: {\n    width: width * 0.4,\n    height: 150,\n    borderRadius: 5,\n    margin: 5\n  },\n  ImgContianer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  }\n});","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Components/quiz/Questions.js"],"names":["React","useState","connect","createASNT","useNavigation","AudioPlayerWiouthControl","COLORS","SIZES","Dimensions","get","width","height","ScoreModal","MaterialCommunityIcons","Quiz","props","navigation","questions","testID","token","username","lessonId","unitId","allQuestions","currentQuestionIndex","setCurrentQuestionIndex","currentOptionSelected","setCurrentOptionSelected","correctOption","setCorrectOption","isOptionsDisabled","setIsOptionsDisabled","score","setScore","passed","setPassed","showNextButton","setShowNextButton","showScoreModal","setShowScoreModal","error","setError","validateAnswer","selectedOption","is_correct_choice","id","handleSubmitTest","data","navigate","err","console","log","handleNext","length","Animated","timing","progress","toValue","duration","useNativeDriver","start","restartQuiz","renderQuestion","marginVertical","color","white","fontSize","question","renderOptions","has_photo_choices","flexDirection","flexWrap","photo_choices","map","option","styles","option_photo","uri","photo","text_choices","borderWidth","borderColor","success","secondary","backgroundColor","borderRadius","alignItems","justifyContent","paddingHorizontal","title","renderNextButton","marginTop","accent","padding","textAlign","Value","setProgress","progressAnim","interpolate","inputRange","outputRange","renderProgressBar","flex","paddingVertical","background","position","has_audio","audio","mapStateToProps","state","auth","mapDispatchToProps","dispatch","asnt","StyleSheet","create","container","TopContainer","BottomContainer","ImgWrapper","margin","ImgContianer"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n// import axios from \"axios\";\nimport { createASNT } from \"../../store/actions/assignments\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AudioPlayerWiouthControl from \"../../Helpers/PlayerWithoutControl\";\n// import Test from \"../../Helpers/testAudio\";\n\nimport {\n  View,\n  Text,\n  SafeAreaView,\n  StatusBar,\n  Image,\n  TouchableOpacity,\n  Modal,\n  Animated,\n  Dimensions,\n  StyleSheet\n} from \"react-native\";\nimport { COLORS, SIZES } from \"../../Helpers/constants\";\nconst { width, height } = Dimensions.get(\"window\");\n\n// import { localhost } from \"../../Helpers/urls\";\n// import { authAxios } from \"../../Helpers/authAxios\";\nimport ScoreModal from \"./model\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\n\nconst Quiz = props => {\n  const navigation = useNavigation();\n\n  const { questions, testID, token, username, lessonId, unitId } = props;\n  // console.log(questions);\n\n  const allQuestions = questions;\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentOptionSelected, setCurrentOptionSelected] = useState(null);\n  const [correctOption, setCorrectOption] = useState(null);\n  const [isOptionsDisabled, setIsOptionsDisabled] = useState(false);\n  const [score, setScore] = useState(0);\n  const [passed, setPassed] = useState(true);\n  const [showNextButton, setShowNextButton] = useState(false);\n  const [showScoreModal, setShowScoreModal] = useState(false);\n  const [error, setError] = useState(false);\n\n  const validateAnswer = selectedOption => {\n    // console.log(selectedOption.is_correct_choice);\n    // console.log(allQuestions[currentQuestionIndex][\"answer\"]);\n    // let correct_option = allQuestions[currentQuestionIndex][\"answer\"];\n    setCurrentOptionSelected(selectedOption);\n    setIsOptionsDisabled(true);\n    if (selectedOption.is_correct_choice) {\n      // console.log(score);\n      setScore(score + 1);\n      // console.log(\"score\", score);\n      setCorrectOption(selectedOption.id);\n    }\n    // Show Next Button\n    setShowNextButton(true);\n  };\n\n  const handleSubmitTest = () => {\n    setShowScoreModal(true);\n    try {\n      // unitId\n      const data = {\n        username,\n        lessonId,\n        score\n      };\n      props.createASNT(token, data);\n      // console.log(\"submitting\");\n      navigation.navigate(\"Unit Details\", { id: unitId });\n\n      // setTimeout(() => {\n      //   navigation.navigate(\"Unit Details\", { id: unitId });\n      // }, 2000);\n    } catch (err) {\n      setError(err);\n      console.log(err);\n    }\n  };\n\n  const handleNext = () => {\n    // console.log(showScoreModal);\n    if (currentQuestionIndex == allQuestions.length - 1) {\n      // Last Question\n      // Show Score Modal\n      setShowScoreModal(true);\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setCurrentOptionSelected(null);\n      setCorrectOption(null);\n      setIsOptionsDisabled(false);\n      setShowNextButton(false);\n    }\n    Animated.timing(progress, {\n      toValue: currentQuestionIndex + 1,\n      duration: 1000,\n      useNativeDriver: false\n    }).start();\n  };\n  const restartQuiz = () => {\n    setShowScoreModal(false);\n\n    setCurrentQuestionIndex(0);\n    setScore(0);\n\n    setCurrentOptionSelected(null);\n    setCorrectOption(null);\n    setIsOptionsDisabled(false);\n    setShowNextButton(false);\n    Animated.timing(progress, {\n      toValue: 0,\n      duration: 1000,\n      useNativeDriver: false\n    }).start();\n  };\n\n  const renderQuestion = () => {\n    return (\n      <View\n        style={{\n          marginVertical: 40\n        }}\n      >\n        {/* Question */}\n        <Text\n          style={{\n            color: COLORS.white,\n            fontSize: 16\n          }}\n        >\n          {allQuestions[currentQuestionIndex]?.question}\n        </Text>\n      </View>\n    );\n  };\n  const renderOptions = () => {\n    return (\n      <View>\n        {allQuestions[currentQuestionIndex].has_photo_choices ? (\n          <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n            {allQuestions[currentQuestionIndex].photo_choices.map(option => (\n              <TouchableOpacity\n                key={option.id}\n                onPress={() => validateAnswer(option)}\n              >\n                {/* <View style={styles.ImgWrapper}> */}\n                <Image\n                  style={styles.option_photo}\n                  source={{ uri: option.photo }}\n                />\n                {/* </View> */}\n              </TouchableOpacity>\n            ))}\n          </View>\n        ) : (\n          <>\n            {allQuestions[currentQuestionIndex]?.text_choices.map(option => (\n              <TouchableOpacity\n                onPress={() => validateAnswer(option)}\n                disabled={isOptionsDisabled}\n                key={option.id}\n                style={{\n                  borderWidth: 3,\n                  borderColor:\n                    option.id == correctOption\n                      ? COLORS.success\n                      : option.id == currentOptionSelected\n                      ? COLORS.error\n                      : COLORS.secondary + \"40\",\n                  backgroundColor:\n                    option == correctOption\n                      ? COLORS.success + \"20\"\n                      : option == currentOptionSelected\n                      ? COLORS.error + \"20\"\n                      : COLORS.secondary + \"20\",\n                  height: 60,\n                  borderRadius: 20,\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  paddingHorizontal: 20,\n                  marginVertical: 10\n                }}\n              >\n                <Text style={{ fontSize: 13, color: COLORS.white }}>\n                  {option.title}\n                </Text>\n\n                {/* Show Check Or Cross Icon based on correct answer*/}\n                {option.id == correctOption ? (\n                  <View\n                    style={{\n                      width: 30,\n                      height: 30,\n                      borderRadius: 30 / 2,\n                      backgroundColor: COLORS.success,\n                      justifyContent: \"center\",\n                      alignItems: \"center\"\n                    }}\n                  >\n                    <MaterialCommunityIcons\n                      name=\"check\"\n                      style={{\n                        color: COLORS.white,\n                        fontSize: 20\n                      }}\n                    />\n                  </View>\n                ) : option.id == currentOptionSelected ? (\n                  <View\n                    style={{\n                      width: 30,\n                      height: 30,\n                      borderRadius: 30 / 2,\n                      backgroundColor: COLORS.error,\n                      justifyContent: \"center\",\n                      alignItems: \"center\"\n                    }}\n                  >\n                    <MaterialCommunityIcons\n                      name=\"close\"\n                      style={{\n                        color: COLORS.white,\n                        fontSize: 20\n                      }}\n                    />\n                  </View>\n                ) : null}\n              </TouchableOpacity>\n            ))}\n            {/* text choices emd   */}\n          </>\n        )}\n      </View>\n    );\n  };\n  const renderNextButton = () => {\n    if (showNextButton) {\n      return (\n        <>\n          {/* {currentQuestionIndex == allQuestions.length - 1 ? (\n            <TouchableOpacity\n              onPress={handleSubmitTest}\n              style={{\n                marginTop: 20,\n                width: \"100%\",\n                backgroundColor: COLORS.accent,\n                padding: 20,\n                borderRadius: 5\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 20,\n                  color: COLORS.white,\n                  textAlign: \"center\"\n                }}\n              >\n                Submit\n              </Text>\n            </TouchableOpacity> */}\n\n          <TouchableOpacity\n            onPress={handleNext}\n            style={{\n              marginTop: 20,\n              width: \"100%\",\n              backgroundColor: COLORS.accent,\n              padding: 20,\n              borderRadius: 5\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 20,\n                color: COLORS.white,\n                textAlign: \"center\"\n              }}\n            >\n              Next\n            </Text>\n          </TouchableOpacity>\n        </>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  const [progress, setProgress] = useState(new Animated.Value(0));\n  const progressAnim = progress.interpolate({\n    inputRange: [0, allQuestions.length],\n    outputRange: [\"0%\", \"100%\"]\n  });\n  const renderProgressBar = () => {\n    return (\n      <View\n        style={{\n          width: \"100%\",\n          height: 1,\n          borderRadius: 5,\n          backgroundColor: \"#00000020\"\n        }}\n      >\n        <Animated.View\n          style={[\n            {\n              height: 1,\n              borderRadius: 5,\n              backgroundColor: COLORS.accent\n            },\n            {\n              width: progressAnim\n            }\n          ]}\n        ></Animated.View>\n      </View>\n    );\n  };\n\n  return (\n    <SafeAreaView\n      style={{\n        flex: 1\n      }}\n    >\n      {/* <StatusBar barStyle=\"light-content\" backgroundColor={COLORS.primary} /> */}\n      <View\n        style={{\n          flex: 1,\n          paddingVertical: 40,\n          paddingHorizontal: 16,\n          backgroundColor: COLORS.background,\n          position: \"relative\"\n        }}\n      >\n        {/* ProgressBar */}\n        <View style={{ flex: 1 }}>{renderProgressBar()}</View>\n\n        <View style={{ flex: 4 }}>\n          {/* Question */}\n          {renderQuestion()}\n        </View>\n\n        {/* Options */}\n        <View style={{ flex: 12 }}>{renderOptions()}</View>\n\n        {/* Next Button */}\n        <View style={{ flex: 3 }}>{renderNextButton()}</View>\n        {/* audi */}\n\n        {allQuestions[currentQuestionIndex].has_audio ? (\n          <AudioPlayerWiouthControl\n            mp3={allQuestions[currentQuestionIndex].audio}\n          />\n        ) : null}\n\n        {/* Score Modal */}\n        {showScoreModal ? (\n          <ScoreModal\n            qlength={allQuestions.length}\n            score={score}\n            showScoreModal={showScoreModal}\n            handleSubmitTest={handleSubmitTest}\n            restartQuiz={restartQuiz}\n          />\n        ) : null}\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    createASNT: (token, asnt) => dispatch(createASNT(token, asnt))\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Quiz);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  TopContainer: {\n    flex: 6\n  },\n  BottomContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  ImgWrapper: {\n    width: 90,\n    height: 40\n    // margin: 5\n    // marginTop: 5\n    // marginBottom: 25\n  },\n  option_photo: {\n    width: width * 0.4,\n    height: 150,\n    borderRadius: 5,\n    margin: 5\n  },\n  ImgContianer: {\n    // width: \"100%\",\n    // height: \"75%\",\n    // display: \"flex\",\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}