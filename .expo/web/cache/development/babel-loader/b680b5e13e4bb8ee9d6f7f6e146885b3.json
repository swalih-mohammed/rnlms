{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./reducers/rootReducer\";\nexport var store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)));\nexport var persistor = persistStore(store);","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/store/index.js"],"names":["createStore","applyMiddleware","compose","AsyncStorage","persistStore","persistReducer","composeWithDevTools","thunkMiddleware","logger","rootReducer","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAGA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAGA,OAAOC,WAAP;AAsDA,OAAO,IAAMC,KAAK,GAAGV,WAAW,CAC9BS,WAD8B,EAE9BH,mBAAmB,CAACL,eAAe,CAACM,eAAD,CAAhB,CAFW,CAAzB;AAIP,OAAO,IAAMI,SAAS,GAAGP,YAAY,CAACM,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n// middlewares\nimport thunkMiddleware from \"redux-thunk\";\nimport logger from \"redux-logger\";\n\n// Import custom components\nimport rootReducer from \"./reducers/rootReducer\";\n\n// const saveToLocalStorage = async state => {\n//   try {\n//     const serializedState = JSON.stringify(state);\n//     // AsyncStorage.setItem(\"state\", serializedState);\n//     await AsyncStorage.setItem(\"state\", serializedState);\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\n// const loadFromLocalStorage = async () => {\n//   try {\n//     // const serializedState = AsyncStorage.getItem(\"state\");\n//     const serializedState = await AsyncStorage.getItem(\"state\");\n//     if (serializedState === null) return undefined;\n//     const data = JSON.parse(serializedState);\n//     console.log(data);\n//     return data;\n//     // return serializedState;\n//   } catch (e) {\n//     console.log(e);\n//     return undefined;\n//   }\n// };\n\n// const persistedState = loadFromLocalStorage();\n\n// /**\n//  * Create a Redux store that holds the app state.\n//  */\n// const store = createStore(\n//   rootReducer,\n//   persistedState,\n//   compose(\n//     applyMiddleware(thunkMiddleware),\n\n//     //For working redux dev tools in chrome (https://github.com/zalmoxisus/redux-devtools-extension)\n//     window.__REDUX_DEVTOOLS_EXTENSION__\n//       ? window.__REDUX_DEVTOOLS_EXTENSION__()\n//       : function(f) {\n//           return f;\n//         }\n//   )\n// );\n\n// const unsubscribe = store.subscribe(() => {\n//   const state = store.getState();\n//   saveToLocalStorage(state);\n// });\n\n// export default store;\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\n);\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}