{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Components/course/list.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport axios from \"axios\";\nimport { localhost } from \"../../Helpers/urls\";\nimport CourseItem from \"../../Components/course/item\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport GetStarted from \"../../Screens/getStarted\";\n\nvar CourseList = function CourseList(props) {\n  var navigation = useNavigation();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      courses = _useState2[0],\n      setCourses = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  useEffect(function () {\n    getCourses();\n\n    if (props.token) {\n      console.log(\"no\");\n\n      (function () {\n        return navigation.navigate(\"Getstarted\");\n      });\n    }\n  }, []);\n\n  var getCourses = function getCourses() {\n    var response;\n    return _regeneratorRuntime.async(function getCourses$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(localhost + \"/courses\"));\n\n          case 4:\n            response = _context.sent;\n            setCourses(response.data);\n            setLoading(false);\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            setError(_context.t0);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  if (!courses) {\n    return null;\n  }\n\n  return React.createElement(React.Fragment, null, loading || props.tokenLoading ? React.createElement(ActivityIndicator, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }) : React.createElement(React.Fragment, null, !props.token ? React.createElement(GetStarted, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }) : React.createElement(FlatList, {\n    data: courses,\n    showsHorizontalScrollIndicator: false,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(CourseItem, {\n        item: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 24\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n    tokenLoading: state.auth.loading\n  };\n};\n\nexport default connect(mapStateToProps, null)(CourseList);","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Components/course/list.js"],"names":["React","useState","useEffect","connect","axios","localhost","CourseItem","useNavigation","GetStarted","CourseList","props","navigation","courses","setCourses","error","setError","loading","setLoading","getCourses","token","console","log","navigate","get","response","data","tokenLoading","flex","justifyContent","item","id","toString","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  StyleSheet,\n  FlatList,\n  ActivityIndicator,\n  View,\n  Text\n} from \"react-native\";\nimport axios from \"axios\";\n// import { courseListURL } from \"../../Helpers/urls\";\nimport { localhost } from \"../../Helpers/urls\";\nimport CourseItem from \"../../Components/course/item\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport GetStarted from \"../../Screens/getStarted\";\n\nconst CourseList = props => {\n  const navigation = useNavigation();\n\n  const [courses, setCourses] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    getCourses();\n    // console.log(props);\n    if (props.token) {\n      console.log(\"no\");\n      () => navigation.navigate(\"Getstarted\");\n    }\n  }, []);\n\n  const getCourses = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${localhost}/courses`);\n      setCourses(response.data);\n      // console.log(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError(err);\n      console.log(err);\n    }\n  };\n\n  if (!courses) {\n    return null;\n  }\n\n  return (\n    <>\n      {loading || props.tokenLoading ? (\n        <ActivityIndicator style={{ flex: 1, justifyContent: \"center\" }} />\n      ) : (\n        <>\n          {!props.token ? (\n            <GetStarted />\n          ) : (\n            <FlatList\n              data={courses}\n              showsHorizontalScrollIndicator={false}\n              keyExtractor={item => item.id.toString()}\n              renderItem={({ item }) => {\n                return <CourseItem item={item} />;\n              }}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    tokenLoading: state.auth.loading\n  };\n};\n\n// export default CourseList;\nexport default connect(\n  mapStateToProps,\n  null\n)(CourseList);\n"]},"metadata":{},"sourceType":"module"}