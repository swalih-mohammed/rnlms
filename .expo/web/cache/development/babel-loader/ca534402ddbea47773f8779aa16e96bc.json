{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Components/lessons/SoundPlayer.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Button } from \"react-native-paper\";\nimport Slider from \"@react-native-community/slider\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Audio } from \"expo-av\";\n\nfunction SoundPlayer(_ref) {\n  var audio = _ref.audio,\n      unitId = _ref.unitId,\n      lessonId = _ref.lessonId;\n  var navigation = useNavigation();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      Status = _React$useState2[0],\n      SetStatus = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isPlaying = _React$useState4[0],\n      setIsplaying = _React$useState4[1];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPosition = _useState2[0],\n      setCurrentPosition = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      totalLength = _useState4[0],\n      setTotalLength = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sliderValue = _useState6[0],\n      setSliderValue = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      didJustFinish = _useState8[0],\n      setDidJustFinish = _useState8[1];\n\n  var sound = React.useRef(new Audio.Sound());\n\n  var onPlaybackStatusUpdate = function onPlaybackStatusUpdate(audio) {\n    if (audio) {\n      setCurrentPosition(audio.positionMillis);\n      setTotalLength(audio.durationMillis);\n\n      if (audio.didJustFinish) {\n        setDidJustFinish(true);\n      }\n    }\n  };\n\n  React.useEffect(function () {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              sound.current.setOnPlaybackStatusUpdate(onPlaybackStatusUpdate);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(sound.current.loadAsync({\n                uri: audio\n              }, {}, true));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var LoadAudio = function LoadAudio() {\n    var checkLoading, result;\n    return _regeneratorRuntime.async(function LoadAudio$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(sound.current.getStatusAsync());\n\n          case 2:\n            checkLoading = _context2.sent;\n            _context2.prev = 3;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(sound.current.loadAsync({\n              uri: audio\n            }, {}, true));\n\n          case 6:\n            result = _context2.sent;\n\n            if (!(result.isLoaded === false)) {\n              _context2.next = 11;\n              break;\n            }\n\n            console.log(\"Error in Loading Audio\");\n            _context2.next = 12;\n            break;\n\n          case 11:\n            return _context2.abrupt(\"return\", result);\n\n          case 12:\n            _context2.next = 17;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](3);\n            console.log(\"Error in Loading Audio\");\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[3, 14]], Promise);\n  };\n\n  var PlayAudio = function PlayAudio() {\n    var result;\n    return _regeneratorRuntime.async(function PlayAudio$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(sound.current.getStatusAsync());\n\n          case 3:\n            result = _context3.sent;\n\n            if (!result.isLoaded) {\n              _context3.next = 10;\n              break;\n            }\n\n            if (!(result.isPlaying === false)) {\n              _context3.next = 8;\n              break;\n            }\n\n            sound.current.playAsync();\n            return _context3.abrupt(\"return\", setIsplaying(true));\n\n          case 8:\n            _context3.next = 11;\n            break;\n\n          case 10:\n            LoadAudio();\n\n          case 11:\n            _context3.next = 16;\n            break;\n\n          case 13:\n            _context3.prev = 13;\n            _context3.t0 = _context3[\"catch\"](0);\n            setIsplaying(false);\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  };\n\n  var PauseAudio = function PauseAudio() {\n    var result;\n    return _regeneratorRuntime.async(function PauseAudio$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            console.log(\"pausing audio\");\n            _context4.prev = 1;\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(sound.current.getStatusAsync());\n\n          case 4:\n            result = _context4.sent;\n\n            if (!result.isLoaded) {\n              _context4.next = 9;\n              break;\n            }\n\n            if (!(result.isPlaying === true)) {\n              _context4.next = 9;\n              break;\n            }\n\n            sound.current.pauseAsync();\n            return _context4.abrupt(\"return\", setIsplaying(false));\n\n          case 9:\n            _context4.next = 14;\n            break;\n\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](1);\n            setIsplaying(false);\n\n          case 14:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[1, 11]], Promise);\n  };\n\n  var calculateSeekBar = function calculateSeekBar() {\n    if (currentPosition && totalLength) {\n      if (currentPosition && totalLength) {\n        return currentPosition / totalLength;\n      }\n    }\n\n    return 0;\n  };\n\n  function millisToMinutesAndSeconds(millis) {\n    var minutes = Math.floor(millis / 60000);\n    var seconds = (millis % 60000 / 1000).toFixed(0);\n    seconds == 60 ? minutes + 1 + \":00\" : minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n  }\n\n  function pad(n, width) {\n    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    n = n + \"\";\n    return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      marginTop: 12,\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.subTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"subtitle\")), React.createElement(Slider, {\n    style: {\n      width: width * 0.8,\n      height: 5,\n      padding: 1,\n      marginBottom: 30\n    },\n    minimumTrackTintColor: \"#93A8B3\",\n    maximumTrackTintColor: \"#000000\",\n    minimumValue: 0,\n    maximumValue: 1,\n    value: calculateSeekBar(),\n    onValueChange: function onValueChange(value) {\n      setCurrentPosition(value * totalLength);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      marginBottom: 5,\n      padding: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    mode: \"Outlined\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Unit Details\", {\n        id: unitId\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, \"Back\"), React.createElement(MaterialCommunityIcons, {\n    name: !isPlaying || didJustFinish ? \"play\" : \"pause\",\n    style: {\n      fontSize: 20,\n      alignSelf: \"center\",\n      padding: 5,\n      borderRadius: 50\n    },\n    onPress: isPlaying || didJustFinish === false ? function () {\n      return PlayAudio();\n    } : function () {\n      return PauseAudio();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    mode: \"Outlined\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Lesson Test\", {\n        lessonId: unitId,\n        unitId: lessonId\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, \"Quiz\")));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  Title: {\n    fontSize: 18,\n    fontWeight: \"600\",\n    textAlign: \"center\"\n  },\n  subTitle: {\n    fontSize: 16,\n    fontWeight: \"200\",\n    textAlign: \"center\"\n  }\n});\nexport default SoundPlayer;","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Components/lessons/SoundPlayer.js"],"names":["React","useState","useEffect","Button","Slider","MaterialCommunityIcons","Dimensions","get","width","height","useNavigation","Audio","SoundPlayer","audio","unitId","lessonId","navigation","Status","SetStatus","isPlaying","setIsplaying","currentPosition","setCurrentPosition","totalLength","setTotalLength","sliderValue","setSliderValue","didJustFinish","setDidJustFinish","sound","useRef","Sound","onPlaybackStatusUpdate","positionMillis","durationMillis","current","setOnPlaybackStatusUpdate","loadAsync","uri","LoadAudio","getStatusAsync","checkLoading","result","isLoaded","console","log","PlayAudio","playAsync","PauseAudio","pauseAsync","calculateSeekBar","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","pad","n","z","length","Array","join","styles","container","alignItems","marginTop","marginBottom","subTitle","padding","value","flexDirection","justifyContent","navigate","id","fontSize","alignSelf","borderRadius","StyleSheet","create","flex","Title","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text, View, StyleSheet, Dimensions } from \"react-native\";\nimport { Button } from \"react-native-paper\";\n\nimport Slider from \"@react-native-community/slider\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nconst { width, height } = Dimensions.get(\"window\");\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Audio } from \"expo-av\";\n\nfunction SoundPlayer({ audio, unitId, lessonId }) {\n  const navigation = useNavigation();\n\n  const [Status, SetStatus] = React.useState(false);\n  const [isPlaying, setIsplaying] = React.useState(false);\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [totalLength, setTotalLength] = useState(1);\n  const [sliderValue, setSliderValue] = useState(0);\n  const [didJustFinish, setDidJustFinish] = useState(false);\n\n  const sound = React.useRef(new Audio.Sound());\n\n  const onPlaybackStatusUpdate = audio => {\n    if (audio) {\n      setCurrentPosition(audio.positionMillis);\n      setTotalLength(audio.durationMillis);\n      if (audio.didJustFinish) {\n        setDidJustFinish(true);\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    (async () => {\n      sound.current.setOnPlaybackStatusUpdate(onPlaybackStatusUpdate);\n      await sound.current.loadAsync({ uri: audio }, {}, true);\n    })();\n  }, []);\n\n  const LoadAudio = async () => {\n    const checkLoading = await sound.current.getStatusAsync();\n    try {\n      const result = await sound.current.loadAsync({ uri: audio }, {}, true);\n      //   console.log(result);\n      if (result.isLoaded === false) {\n        console.log(\"Error in Loading Audio\");\n      } else {\n        return result;\n      }\n    } catch (error) {\n      console.log(\"Error in Loading Audio\");\n    }\n  };\n\n  const PlayAudio = async () => {\n    try {\n      const result = await sound.current.getStatusAsync();\n      if (result.isLoaded) {\n        if (result.isPlaying === false) {\n          sound.current.playAsync();\n          return setIsplaying(true);\n          //   return\n        }\n      } else {\n        LoadAudio();\n      }\n    } catch (error) {\n      setIsplaying(false);\n    }\n  };\n  const PauseAudio = async () => {\n    console.log(\"pausing audio\");\n    try {\n      const result = await sound.current.getStatusAsync();\n      if (result.isLoaded) {\n        if (result.isPlaying === true) {\n          sound.current.pauseAsync();\n          return setIsplaying(false);\n        }\n      }\n    } catch (error) {\n      setIsplaying(false);\n    }\n  };\n\n  const calculateSeekBar = () => {\n    if (currentPosition && totalLength) {\n      if (currentPosition && totalLength) {\n        return currentPosition / totalLength;\n      }\n    }\n    return 0;\n  };\n\n  function millisToMinutesAndSeconds(millis) {\n    var minutes = Math.floor(millis / 60000);\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\n    // return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\n    seconds == 60\n      ? minutes + 1 + \":00\"\n      : minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n  }\n\n  function pad(n, width, z = 0) {\n    n = n + \"\";\n    return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n  }\n\n  //   const minutesAndSeconds = position => [\n  //     pad(Math.floor(position / 60), 2),\n  //     pad(position % 60, 2)\n  //   ];\n  // //   const elapsed = millisToMinutesAndSeconds(currentPosition);\n  //     const elapsed = Math.floor(minutesAndSeconds(currentPosition));\n  //   const remaining = minutesAndSeconds(totalLength - currentPosition);\n\n  return (\n    <View style={styles.container}>\n      <View style={{ alignItems: \"center\", marginTop: 12, marginBottom: 20 }}>\n        {/* <Text style={styles.Title}>Title</Text> */}\n        <Text style={styles.subTitle}>subtitle</Text>\n      </View>\n      <Slider\n        style={{\n          width: width * 0.8,\n          height: 5,\n          padding: 1,\n          marginBottom: 30\n        }}\n        minimumTrackTintColor=\"#93A8B3\"\n        maximumTrackTintColor=\"#000000\"\n        minimumValue={0}\n        maximumValue={1}\n        value={calculateSeekBar()}\n        onValueChange={value => {\n          setCurrentPosition(value * totalLength);\n        }}\n      />\n      {/* <Text>{elapsed[0] + \":\" + elapsed[1]}</Text> */}\n\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginBottom: 5,\n          padding: 2\n        }}\n      >\n        <Button\n          mode=\"Outlined\"\n          onPress={() => navigation.navigate(\"Unit Details\", { id: unitId })}\n        >\n          Back\n        </Button>\n\n        <MaterialCommunityIcons\n          name={!isPlaying || didJustFinish ? \"play\" : \"pause\"}\n          style={{\n            // color: COLORS.white,\n            fontSize: 20,\n            alignSelf: \"center\",\n            // backgroundColor: \"gray\",\n            padding: 5,\n            borderRadius: 50\n            // borderWidth: 1,\n            // borderColor: \"#34a8eb\"\n          }}\n          onPress={\n            isPlaying || didJustFinish === false\n              ? () => PlayAudio()\n              : () => PauseAudio()\n          }\n        />\n        <Button\n          mode=\"Outlined\"\n          onPress={() =>\n            navigation.navigate(\"Lesson Test\", {\n              lessonId: unitId,\n              unitId: lessonId\n            })\n          }\n        >\n          Quiz\n        </Button>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  Title: {\n    fontSize: 18,\n    fontWeight: \"600\",\n    textAlign: \"center\"\n  },\n  subTitle: {\n    fontSize: 16,\n    fontWeight: \"200\",\n    textAlign: \"center\"\n  }\n});\n\nexport default SoundPlayer;\n"]},"metadata":{},"sourceType":"module"}