{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Components/quiz/list.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { localhost } from \"../../Helpers/urls\";\nimport Questions from \"./Questions\";\n\nvar CourseDetail = function CourseDetail(_ref) {\n  var route = _ref.route;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      test = _useState2[0],\n      setTest = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      questions = _useState4[0],\n      setQuestions = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  useEffect(function () {\n    getTest();\n  }, []);\n  var _route$params = route.params,\n      lessonId = _route$params.lessonId,\n      QuizId = _route$params.QuizId,\n      unitId = _route$params.unitId;\n\n  var getTest = function getTest() {\n    var response;\n    return _regeneratorRuntime.async(function getTest$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(localhost + \"/quizzes/\" + QuizId));\n\n          case 4:\n            response = _context.sent;\n            setQuestions(response.data);\n            setLoading(false);\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            setError(_context.t0);\n            console.log(error);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  return React.createElement(React.Fragment, null, loading ? React.createElement(ActivityIndicator, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }) : React.createElement(React.Fragment, null, questions ? React.createElement(Questions, {\n    questions: questions.questions,\n    lessonId: lessonId,\n    unitId: unitId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }) : null));\n};\n\nexport default CourseDetail;","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Components/quiz/list.js"],"names":["React","useState","useEffect","axios","localhost","Questions","CourseDetail","route","test","setTest","questions","setQuestions","error","setError","loading","setLoading","getTest","params","lessonId","QuizId","unitId","get","response","data","console","log","flex","justifyContent"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAGA,SAASC,SAAT;AACA,OAAOC,SAAP;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAClC,kBAAwBN,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAkCR,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOS,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA0BV,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOW,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA8BZ,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOa,OAAP;AAAA,MAAgBC,UAAhB;;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,sBAAqCT,KAAK,CAACU,MAA3C;AAAA,MAAQC,QAAR,iBAAQA,QAAR;AAAA,MAAkBC,MAAlB,iBAAkBA,MAAlB;AAAA,MAA0BC,MAA1B,iBAA0BA,MAA1B;;AAEA,MAAMJ,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGZD,YAAAA,UAAU,CAAC,IAAD,CAAV;AAHY;AAAA,6CAIWZ,KAAK,CAACkB,GAAN,CAAajB,SAAb,iBAAkCe,MAAlC,CAJX;;AAAA;AAING,YAAAA,QAJM;AAMZX,YAAAA,YAAY,CAACW,QAAQ,CAACC,IAAV,CAAZ;AACAR,YAAAA,UAAU,CAAC,KAAD,CAAV;AAPY;AAAA;;AAAA;AAAA;AAAA;AAUZF,YAAAA,QAAQ,aAAR;AACAW,YAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;;AAXY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAeA,SACE,0CACGE,OAAO,GACN,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAE;AAAEY,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE;AAA3B,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,0CACGjB,SAAS,GACR,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEA,SAAS,CAACA,SADvB;AAEE,IAAA,QAAQ,EAAEQ,QAFZ;AAGE,IAAA,MAAM,EAAEE,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAMN,IAPN,CAJJ,CADF;AAiBD,CA5CD;;AA6CA,eAAed,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ActivityIndicator } from \"react-native\";\nimport { View, Text } from \"react-native\";\nimport { localhost } from \"../../Helpers/urls\";\nimport Questions from \"./Questions\";\n\n// import Questions from \"../../Components/pacticeTest/Qustions\";\nconst CourseDetail = ({ route }) => {\n  const [test, setTest] = useState(null);\n  const [questions, setQuestions] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(null);\n\n  useEffect(() => {\n    getTest();\n  }, []);\n\n  const { lessonId, QuizId, unitId } = route.params;\n\n  const getTest = async () => {\n    // console.log(123);\n    try {\n      setLoading(true);\n      const response = await axios.get(`${localhost}/quizzes/${QuizId}`);\n      // setTest(response.data);\n      setQuestions(response.data);\n      setLoading(false);\n      // console.log(response.data);\n    } catch (err) {\n      setError(err);\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      {loading ? (\n        <ActivityIndicator style={{ flex: 1, justifyContent: \"center\" }} />\n      ) : (\n        <>\n          {questions ? (\n            <Questions\n              questions={questions.questions}\n              lessonId={lessonId}\n              unitId={unitId}\n            />\n          ) : null}\n        </>\n      )}\n    </>\n  );\n};\nexport default CourseDetail;\n"]},"metadata":{},"sourceType":"module"}