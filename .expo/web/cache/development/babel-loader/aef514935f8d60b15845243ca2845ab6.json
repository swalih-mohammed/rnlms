{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Components/quiz/model.js\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { COLORS, SIZES } from \"../../Helpers/constants\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport LottieView from \"lottie-react-native\";\nimport AudioPlayerWithoutControl from \"../../Helpers/PlayerWithoutControl\";\n\nvar CourseDetail = function CourseDetail(_ref) {\n  var showScoreModal = _ref.showScoreModal,\n      qlength = _ref.qlength,\n      score = _ref.score,\n      handleSubmitTest = _ref.handleSubmitTest,\n      restartQuiz = _ref.restartQuiz;\n  var animation = useRef(null);\n  useEffect(function () {\n    if (animation.current) {\n      animation.current.play(0, 100);\n    }\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: showScoreModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.primary,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: COLORS.white,\n      width: width * 0.95,\n      hight: height * 0.6,\n      borderRadius: 20,\n      padding: 20,\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, score / qlength * 100 > 79 ? \"Congratulations!\" : \"Oops!\"), React.createElement(View, {\n    style: {\n      width: width * 0.6,\n      hight: 300,\n      padding: 100,\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, score / qlength * 100 > 79 ? React.createElement(LottieView, {\n    ref: animation,\n    source: require(\"../../../assets/lotties/success.json\"),\n    autoPlay: false,\n    loop: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }) : React.createElement(LottieView, {\n    ref: animation,\n    source: require(\"../../../assets/lotties/failure.json\"),\n    autoPlay: false,\n    loop: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })), React.createElement(AudioPlayerWithoutControl, {\n    is_system: true,\n    success: score / qlength * 100 > 79 ? true : false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      marginVertical: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30,\n      color: score / qlength * 100 > 79 ? COLORS.success : COLORS.error\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, score / qlength * 100), React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: score / qlength * 100 > 79 ? COLORS.success : COLORS.error\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"%\")), React.createElement(TouchableOpacity, {\n    onPress: score / qlength * 100 > 79 ? function () {\n      return handleSubmitTest();\n    } : function () {\n      return restartQuiz();\n    },\n    style: {\n      backgroundColor: COLORS.accent,\n      padding: 10,\n      width: \"95%\",\n      borderRadius: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      color: COLORS.white,\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, score / qlength * 100 > 79 ? \"Next Lesson\" : \"Try Again\"))))));\n};\n\nexport default CourseDetail;","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Components/quiz/model.js"],"names":["React","useState","useEffect","useRef","COLORS","SIZES","Dimensions","get","width","height","LottieView","AudioPlayerWithoutControl","CourseDetail","showScoreModal","qlength","score","handleSubmitTest","restartQuiz","animation","current","play","flex","backgroundColor","primary","alignItems","justifyContent","white","hight","borderRadius","padding","fontSize","fontWeight","require","flexDirection","marginVertical","color","success","error","accent","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Modal, View, TouchableOpacity, Text, Dimensions } from \"react-native\";\nimport { COLORS, SIZES } from \"../../Helpers/constants\";\nconst { width, height } = Dimensions.get(\"window\");\nimport LottieView from \"lottie-react-native\";\nimport AudioPlayerWithoutControl from \"../../Helpers/PlayerWithoutControl\";\n\nconst CourseDetail = ({\n  showScoreModal,\n  qlength,\n  score,\n  handleSubmitTest,\n  restartQuiz\n}) => {\n  const animation = useRef(null);\n  useEffect(() => {\n    // animation.current.play();\n    if (animation.current) {\n      animation.current.play(0, 100);\n    }\n  }, []);\n\n  return (\n    <>\n      <Modal animationType=\"slide\" transparent={true} visible={showScoreModal}>\n        <View\n          style={{\n            flex: 1,\n            backgroundColor: COLORS.primary,\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <View\n            style={{\n              backgroundColor: COLORS.white,\n              width: width * 0.95,\n              hight: height * 0.6,\n              borderRadius: 20,\n              padding: 20,\n              alignItems: \"center\"\n            }}\n          >\n            <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>\n              {(score / qlength) * 100 > 79 ? \"Congratulations!\" : \"Oops!\"}\n            </Text>\n            <View\n              style={{\n                width: width * 0.6,\n                hight: 300,\n                // borderRadius: 20,\n                padding: 100,\n                alignItems: \"center\"\n              }}\n            >\n              {(score / qlength) * 100 > 79 ? (\n                <LottieView\n                  ref={animation}\n                  source={require(\"../../../assets/lotties/success.json\")}\n                  autoPlay={false}\n                  loop={false}\n                />\n              ) : (\n                <LottieView\n                  ref={animation}\n                  source={require(\"../../../assets/lotties/failure.json\")}\n                  autoPlay={false}\n                  loop={false}\n                  // autoPlay\n\n                  // loop\n                />\n              )}\n            </View>\n            <AudioPlayerWithoutControl\n              is_system={true}\n              success={(score / qlength) * 100 > 79 ? true : false}\n            />\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"flex-start\",\n                alignItems: \"center\",\n                marginVertical: 20\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 30,\n                  color:\n                    (score / qlength) * 100 > 79 ? COLORS.success : COLORS.error\n                }}\n              >\n                {(score / qlength) * 100}\n              </Text>\n              <Text\n                style={{\n                  fontSize: 20,\n                  color:\n                    (score / qlength) * 100 > 79 ? COLORS.success : COLORS.error\n                }}\n              >\n                %\n              </Text>\n            </View>\n            {/* Retry Quiz button */}\n\n            <TouchableOpacity\n              onPress={\n                (score / qlength) * 100 > 79\n                  ? () => handleSubmitTest()\n                  : () => restartQuiz()\n              }\n              style={{\n                backgroundColor: COLORS.accent,\n                padding: 10,\n                width: \"95%\",\n                borderRadius: 10\n              }}\n            >\n              <Text\n                style={{\n                  textAlign: \"center\",\n                  color: COLORS.white,\n                  fontSize: 20\n                }}\n              >\n                {/* Next Unit */}\n                {(score / qlength) * 100 > 79 ? \"Next Lesson\" : \"Try Again\"}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n    </>\n  );\n};\nexport default CourseDetail;\n\n// import React, { useState, useEffect } from \"react\";\n// import { Modal, View, TouchableOpacity, Text } from \"react-native\";\n\n// const CourseDetail = ({ showScoreModal }) => {\n//   return (\n//     <>\n//       <Modal animationType=\"slide\" transparent={true} visible={showScoreModal}>\n//         <View\n//           style={{\n//             flex: 1,\n//             backgroundColor: COLORS.primary,\n//             alignItems: \"center\",\n//             justifyContent: \"center\"\n//           }}\n//         >\n//           <View\n//             style={{\n//               backgroundColor: COLORS.white,\n//               width: \"90%\",\n//               borderRadius: 20,\n//               padding: 20,\n//               alignItems: \"center\"\n//             }}\n//           >\n//             <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>\n//               {(score / allQuestions.length) * 100 > 79\n//                 ? \"Congratulations!\"\n//                 : \"Oops!\"}\n//             </Text>\n\n//             <View\n//               style={{\n//                 flexDirection: \"row\",\n//                 justifyContent: \"flex-start\",\n//                 alignItems: \"center\",\n//                 marginVertical: 20\n//               }}\n//             >\n//               <Text\n//                 style={{\n//                   fontSize: 30,\n//                   color:\n//                     (score / allQuestions.length) * 100 > 79\n//                       ? COLORS.success\n//                       : COLORS.error\n//                 }}\n//               >\n//                 {(score / allQuestions.length) * 100}\n//               </Text>\n//               <Text\n//                 style={{\n//                   fontSize: 20,\n//                   color: COLORS.black\n//                 }}\n//               >\n//                 %\n//               </Text>\n//             </View>\n//             {/* Retry Quiz button */}\n//             <TouchableOpacity\n//               onPress={\n//                 (score / allQuestions.length) * 100 > 79\n//                   ? () => handleSubmitTest()\n//                   : () => restartQuiz()\n//               }\n//               style={{\n//                 backgroundColor: COLORS.accent,\n//                 padding: 10,\n//                 width: \"95%\",\n//                 borderRadius: 10\n//               }}\n//             >\n//               <Text\n//                 style={{\n//                   textAlign: \"center\",\n//                   color: COLORS.white,\n//                   fontSize: 20\n//                 }}\n//               >\n//                 {(score / allQuestions.length) * 100 > 79\n//                   ? \"Go to Next Item\"\n//                   : \"Try Again\"}\n//               </Text>\n//             </TouchableOpacity>\n//           </View>\n//         </View>\n//       </Modal>\n//     </>\n//   );\n// };\n// export default CourseDetail;\n"]},"metadata":{},"sourceType":"module"}