{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Components/lessons/lessonItem.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Constants from \"expo-constants\";\nimport { Button, IconButton } from \"react-native-paper\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { Audio } from \"expo-av\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport { useNavigation } from \"@react-navigation/native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nexport default function AudioPLayer(_ref) {\n  var Tracks = _ref.Tracks,\n      lessonId = _ref.lessonId,\n      hasQuiz = _ref.hasQuiz,\n      QuizId = _ref.QuizId,\n      unitId = _ref.unitId;\n  var navigation = useNavigation();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      Loaded = _React$useState2[0],\n      SetLoaded = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      Loading = _React$useState4[0],\n      SetLoading = _React$useState4[1];\n\n  var _React$useState5 = React.useState(Tracks[0]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      CurrentSong = _React$useState6[0],\n      SetCurrentSong = _React$useState6[1];\n\n  var _React$useState7 = React.useState(0),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      lastSongIndex = _React$useState8[0],\n      setLastSongIndex = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      isPlaying = _React$useState10[0],\n      SetIsPlaying = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      didJustFinish = _React$useState12[0],\n      setDidJustFinish = _React$useState12[1];\n\n  var sound = React.useRef(new Audio.Sound());\n\n  var onPlaybackStatusUpdate = function onPlaybackStatusUpdate(audio) {\n    if (audio) {\n      if (audio.didJustFinish) {\n        setDidJustFinish(true);\n      }\n    }\n  };\n\n  React.useEffect(function () {\n    LoadAudio();\n    find_last_track_index();\n    sound.current.setOnPlaybackStatusUpdate(onPlaybackStatusUpdate);\n    return function () {\n      return Unload();\n    };\n  }, [CurrentSong]);\n\n  var Unload = function Unload() {\n    return _regeneratorRuntime.async(function Unload$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(sound.current.unloadAsync());\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var find_last_track_index = function find_last_track_index() {\n    var track_length = Tracks.length;\n    setLastSongIndex(track_length - 1);\n  };\n\n  var PlayAudio = function PlayAudio() {\n    var result;\n    return _regeneratorRuntime.async(function PlayAudio$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(sound.current.getStatusAsync());\n\n          case 3:\n            result = _context2.sent;\n\n            if (result.isLoaded) {\n              if (result.isPlaying === false) {\n                SetIsPlaying(true);\n                setDidJustFinish(false);\n                sound.current.playAsync();\n              }\n            }\n\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var PauseAudio = function PauseAudio() {\n    var result;\n    return _regeneratorRuntime.async(function PauseAudio$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(sound.current.getStatusAsync());\n\n          case 3:\n            result = _context3.sent;\n\n            if (result.isLoaded) {\n              if (result.isPlaying === true) {\n                sound.current.pauseAsync();\n                SetIsPlaying(false);\n              }\n            }\n\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var LoadAudio = function LoadAudio() {\n    var checkLoading, result;\n    return _regeneratorRuntime.async(function LoadAudio$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            SetLoaded(false);\n            SetLoading(true);\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(sound.current.getStatusAsync());\n\n          case 4:\n            checkLoading = _context4.sent;\n\n            if (!(checkLoading.isLoaded === false)) {\n              _context4.next = 19;\n              break;\n            }\n\n            _context4.prev = 6;\n            _context4.next = 9;\n            return _regeneratorRuntime.awrap(sound.current.loadAsync({\n              uri: CurrentSong.audio\n            }));\n\n          case 9:\n            result = _context4.sent;\n\n            if (result.isLoaded === false) {\n              SetLoading(false);\n              console.log(\"Error in Loading Audio\");\n            } else {\n              SetLoading(false);\n              PlayAudio();\n              SetLoaded(true);\n            }\n\n            _context4.next = 17;\n            break;\n\n          case 13:\n            _context4.prev = 13;\n            _context4.t0 = _context4[\"catch\"](6);\n            console.log(_context4.t0);\n            SetLoading(false);\n\n          case 17:\n            _context4.next = 20;\n            break;\n\n          case 19:\n            SetLoading(false);\n\n          case 20:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[6, 13]], Promise);\n  };\n\n  var NextSong = function NextSong() {\n    var currentSongIndex = Tracks.indexOf(CurrentSong);\n    var lastSongIndex = Tracks.indexOf(Tracks[Tracks.length - 1]);\n\n    if (currentSongIndex === lastSongIndex) {\n      SetCurrentSong(Tracks[0]);\n    } else {\n      SetCurrentSong(Tracks[currentSongIndex + 1]);\n    }\n  };\n\n  var PrevSong = function PrevSong() {\n    var currentSongIndex = Tracks.indexOf(CurrentSong);\n    var lastSongIndex = Tracks.indexOf(Tracks[Tracks.length - 1]);\n\n    if (currentSongIndex === 0) {\n      SetCurrentSong(Tracks[Tracks.length - 1]);\n    } else {\n      SetCurrentSong(Tracks[lastSongIndex - 1]);\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.TopContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.ImgWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.photo,\n    source: {\n      uri: CurrentSong.photo\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.BottomContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.Controls,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, Tracks.indexOf(CurrentSong) === 0 ? React.createElement(View, {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    mode: \"Outlined\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Unit Details\", {\n        id: unitId\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"Exit\")) : React.createElement(MaterialCommunityIcons, {\n    name: \"arrow-left\",\n    style: {\n      fontSize: 50,\n      alignSelf: \"center\",\n      padding: 20\n    },\n    onPress: PrevSong,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }), React.createElement(MaterialCommunityIcons, {\n    name: !isPlaying || didJustFinish ? \"play\" : \"pause\",\n    style: {\n      fontSize: 50,\n      alignSelf: \"center\",\n      padding: 20,\n      borderRadius: 50\n    },\n    onPress: isPlaying || didJustFinish === false ? function () {\n      return PlayAudio();\n    } : function () {\n      return PauseAudio();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }), Tracks.indexOf(CurrentSong) === lastSongIndex & hasQuiz ? React.createElement(View, {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    mode: \"Outlined\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Lesson Test\", {\n        QuizId: QuizId,\n        lessonId: lessonId,\n        unitId: unitId\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, \"Take a Quiz\")) : React.createElement(MaterialCommunityIcons, {\n    name: \"arrow-right\",\n    style: {\n      fontSize: 50,\n      alignSelf: \"center\",\n      padding: 20\n    },\n    onPress: NextSong,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  TopContainer: {\n    flex: 6\n  },\n  BottomContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  ImgWrapper: {\n    width: width * 0.95,\n    height: height * 0.9\n  },\n  photo: {\n    width: \"100%\",\n    height: \"85%\",\n    margin: 10,\n    borderRadius: 10\n  },\n  Controls: {\n    flexDirection: \"row\",\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/Projects/django_lms/rnlms/src/Components/lessons/lessonItem.js"],"names":["React","Constants","Button","IconButton","MaterialCommunityIcons","Audio","Dimensions","get","width","height","useNavigation","SafeAreaView","AudioPLayer","Tracks","lessonId","hasQuiz","QuizId","unitId","navigation","useState","Loaded","SetLoaded","Loading","SetLoading","CurrentSong","SetCurrentSong","lastSongIndex","setLastSongIndex","isPlaying","SetIsPlaying","didJustFinish","setDidJustFinish","sound","useRef","Sound","onPlaybackStatusUpdate","audio","useEffect","LoadAudio","find_last_track_index","current","setOnPlaybackStatusUpdate","Unload","unloadAsync","track_length","length","PlayAudio","getStatusAsync","result","isLoaded","playAsync","console","log","PauseAudio","pauseAsync","checkLoading","loadAsync","uri","NextSong","currentSongIndex","indexOf","PrevSong","styles","container","TopContainer","ImgWrapper","photo","BottomContainer","Controls","marginTop","navigate","id","fontSize","alignSelf","padding","borderRadius","StyleSheet","create","flex","flexDirection","justifyContent","margin"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  StyleSheet,\n  ActivityIndicator,\n  Image,\n  Dimensions,\n  Text,\n  TouchableOpacity\n} from \"react-native\";\nimport Constants from \"expo-constants\";\nimport { Button, IconButton } from \"react-native-paper\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport { Audio } from \"expo-av\";\nconst { width, height } = Dimensions.get(\"window\");\nimport { useNavigation } from \"@react-navigation/native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\n\nexport default function AudioPLayer({\n  Tracks,\n  lessonId,\n  hasQuiz,\n  QuizId,\n  unitId\n}) {\n  const navigation = useNavigation();\n  // console.log(QuizId);\n  const [Loaded, SetLoaded] = React.useState(false);\n  const [Loading, SetLoading] = React.useState(false);\n  const [CurrentSong, SetCurrentSong] = React.useState(Tracks[0]);\n  const [lastSongIndex, setLastSongIndex] = React.useState(0);\n\n  const [isPlaying, SetIsPlaying] = React.useState(false);\n  const [didJustFinish, setDidJustFinish] = React.useState(false);\n\n  const sound = React.useRef(new Audio.Sound());\n\n  const onPlaybackStatusUpdate = audio => {\n    if (audio) {\n      if (audio.didJustFinish) {\n        setDidJustFinish(true);\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    LoadAudio();\n    find_last_track_index();\n    sound.current.setOnPlaybackStatusUpdate(onPlaybackStatusUpdate);\n    return () => Unload();\n  }, [CurrentSong]);\n\n  const Unload = async () => {\n    await sound.current.unloadAsync();\n  };\n  const find_last_track_index = () => {\n    const track_length = Tracks.length;\n    setLastSongIndex(track_length - 1);\n  };\n\n  const PlayAudio = async () => {\n    try {\n      const result = await sound.current.getStatusAsync();\n      if (result.isLoaded) {\n        if (result.isPlaying === false) {\n          SetIsPlaying(true);\n          setDidJustFinish(false);\n          sound.current.playAsync();\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const PauseAudio = async () => {\n    try {\n      const result = await sound.current.getStatusAsync();\n      if (result.isLoaded) {\n        if (result.isPlaying === true) {\n          sound.current.pauseAsync();\n          SetIsPlaying(false);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const LoadAudio = async () => {\n    SetLoaded(false);\n    SetLoading(true);\n    const checkLoading = await sound.current.getStatusAsync();\n    if (checkLoading.isLoaded === false) {\n      try {\n        const result = await sound.current.loadAsync({\n          uri: CurrentSong.audio\n        });\n        if (result.isLoaded === false) {\n          SetLoading(false);\n          console.log(\"Error in Loading Audio\");\n        } else {\n          SetLoading(false);\n          PlayAudio();\n          SetLoaded(true);\n        }\n      } catch (error) {\n        console.log(error);\n        SetLoading(false);\n      }\n    } else {\n      SetLoading(false);\n    }\n  };\n\n  const NextSong = () => {\n    const currentSongIndex = Tracks.indexOf(CurrentSong);\n    const lastSongIndex = Tracks.indexOf(Tracks[Tracks.length - 1]);\n    if (currentSongIndex === lastSongIndex) {\n      SetCurrentSong(Tracks[0]);\n    } else {\n      SetCurrentSong(Tracks[currentSongIndex + 1]);\n    }\n  };\n\n  const PrevSong = () => {\n    const currentSongIndex = Tracks.indexOf(CurrentSong);\n    const lastSongIndex = Tracks.indexOf(Tracks[Tracks.length - 1]);\n    if (currentSongIndex === 0) {\n      SetCurrentSong(Tracks[Tracks.length - 1]);\n    } else {\n      SetCurrentSong(Tracks[lastSongIndex - 1]);\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.TopContainer}>\n        <View style={styles.ImgWrapper}>\n          <Image style={styles.photo} source={{ uri: CurrentSong.photo }} />\n        </View>\n      </View>\n      <View style={styles.BottomContainer}>\n        <View style={styles.Controls}>\n          {Tracks.indexOf(CurrentSong) === 0 ? (\n            <View style={{ marginTop: 20 }}>\n              <Button\n                mode=\"Outlined\"\n                onPress={() =>\n                  navigation.navigate(\"Unit Details\", { id: unitId })\n                }\n              >\n                Exit\n              </Button>\n            </View>\n          ) : (\n            <MaterialCommunityIcons\n              name=\"arrow-left\"\n              style={{\n                // color: COLORS.white,\n                fontSize: 50,\n                alignSelf: \"center\",\n                // backgroundColor: \"gray\",\n                padding: 20\n                // borderRadius: 50\n                // borderWidth: 1,\n                // borderColor: \"#34a8eb\"\n              }}\n              onPress={PrevSong}\n            />\n          )}\n\n          <MaterialCommunityIcons\n            name={!isPlaying || didJustFinish ? \"play\" : \"pause\"}\n            style={{\n              // color: COLORS.white,\n              fontSize: 50,\n              alignSelf: \"center\",\n              // backgroundColor: \"gray\",\n              padding: 20,\n              borderRadius: 50\n              // borderWidth: 1,\n              // borderColor: \"#34a8eb\"\n            }}\n            onPress={\n              isPlaying || didJustFinish === false\n                ? () => PlayAudio()\n                : () => PauseAudio()\n            }\n          />\n\n          {(Tracks.indexOf(CurrentSong) === lastSongIndex) & hasQuiz ? (\n            <View style={{ marginTop: 20 }}>\n              <Button\n                mode=\"Outlined\"\n                onPress={() =>\n                  navigation.navigate(\"Lesson Test\", {\n                    QuizId: QuizId,\n                    lessonId: lessonId,\n                    unitId: unitId\n                  })\n                }\n              >\n                Take a Quiz\n              </Button>\n            </View>\n          ) : (\n            <MaterialCommunityIcons\n              name=\"arrow-right\"\n              style={{\n                // color: COLORS.white,\n                fontSize: 50,\n                alignSelf: \"center\",\n                // backgroundColor: \"gray\",\n                padding: 20\n                // borderRadius: 50\n                // borderWidth: 1,\n                // borderColor: \"#34a8eb\"\n              }}\n              onPress={NextSong}\n            />\n          )}\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  TopContainer: {\n    flex: 6\n  },\n  BottomContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  ImgWrapper: {\n    width: width * 0.95,\n    height: height * 0.9\n    // marginTop: 5\n    // marginBottom: 25\n  },\n  photo: {\n    width: \"100%\",\n    height: \"85%\",\n    margin: 10,\n    borderRadius: 10\n  },\n  Controls: {\n    flexDirection: \"row\",\n    marginTop: 20\n  }\n});\n"]},"metadata":{},"sourceType":"module"}